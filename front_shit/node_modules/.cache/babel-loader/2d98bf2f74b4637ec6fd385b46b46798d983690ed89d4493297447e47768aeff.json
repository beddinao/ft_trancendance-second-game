{"ast":null,"code":"var _jsxFileName = \"/Users/beddinao/cursus-0/trancendance/new_stuff/front_shit/src/pgame.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar canvas,\n  ctx,\n  wrapper,\n  game_state,\n  game_update = null,\n  current_players,\n  _margin = {},\n  game = [];\nvar PGame = props => {\n  _s();\n  useEffect(() => {\n    canvas = document.getElementById(\"canvas\");\n    ctx = canvas.getContext(\"2d\");\n    wrapper = document.getElementById(\"wrapper\");\n    game.c_wid = canvas.width = wrapper.offsetWidth;\n    game.c_hei = canvas.height = window.innerHeight / 2;\n    game_update = JSON.parse(props.game_update);\n    game.vars = {\n      sq_w: game.c_hei / 10,\n      sq_h: game.c_hei / 10,\n      main_c: \"#e5e5e5\",\n      main_c_rgb: \"rgb(141, 153, 174, \",\n      main_b: \"#000\",\n      ps_c: \"#fca311\",\n      coins_c: \"#0582ca\",\n      enemies_radius: Math.floor(game.c_hei / 10 / 3 / 1.5),\n      players_radius: game.c_hei / 10 / 5,\n      coins_radius: game.c_hei / 10 / 8\n    };\n    game.squares = new Array();\n    game.enemies = new Array();\n    game.coins = new Array();\n    game.players = new Array();\n    game.receive_updates = () => {\n      if (game_update != null) {\n        _margin.x = game_update.w / game.c_wid;\n        _margin.y = game_update.h / game.c_hei;\n        current_players = game_update.current_players;\n        props.setPlayers(current_players);\n        game.squares = game_update.squares;\n        game.players = game_update.players;\n        game.enemies = game_update.enemies;\n        game.coins = game_update.coins;\n        props.p_1(game_update.p1_score);\n        props.p_2(game_update.p2_score);\n        if (game_update.state === 0 || game_update.state === 3 && game_state !== 3) props.toggle(true);\n        if (game_state != game_update.state) game_state = game_update.state;\n        game_update = null;\n      }\n    };\n    game.send_updates = up_type => {\n      props.send_update(up_type, JSON.stringify({\n        state: game_state,\n        player: JSON.stringify(game.players[1])\n      }), 'host');\n    };\n\n    /*game.send_state = () => {\n    \tprops.send_update(\"game state\", JSON.stringify({\n    \t\tstate: game_state,\n    \t}), 'host')\n    }\n    \tgame.receive_state = () => {\n    \tif (game_update != null && game_update.state != null) { \n    \t\tif (game_update.state === 0\n    \t\t\t|| (game_update.state === 3 && game_state !== 3))\n    \t\t\tprops.toggle(true);\n    \t\tgame_state = game_update.state;\n    \t\tgame_update = null;\n    \t}\n    }*/\n\n    game.collided = (x, y, w, h, s, ray) => {\n      if (x < 0 || x > game.c_wid - w || y < 0 || y > game.c_hei - h) return 4;\n      let e_x, e_y;\n      try {\n        game.squares.forEach(e => {\n          if (e === null) return;\n          e_x = e.x / _margin.x;\n          e_y = e.y / _margin.y;\n          if (e_x <= x + w && e_x + game.vars.sq_w >= x && e_y <= y + h && e_y + game.vars.sq_h >= y) {\n            throw 1;\n          }\n        });\n        if (ray || s.type == \"enemy\") {\n          game.enemies.forEach(e => {\n            if (e === null) return;\n            let new_w = game.vars.enemies_radius * 2,\n              new_x = e.x / _margin.x - game.vars.enemies_radius,\n              new_y = e.y / _margin.y - game.vars.enemies_radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              throw 2;\n            }\n          });\n        }\n        if (s.type == \"player\") {\n          game.coins.forEach(e => {\n            if (e === null) return;\n            let new_w = game.vars.coins_radius * 2,\n              new_x = e.x / _margin.x - game.vars.coins_radius,\n              new_y = e.y / _margin.y - game.vars.coins_radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              throw 3;\n            }\n          });\n        }\n        game.players.forEach(e => {\n          if (e === null) return;\n          if (e.state) {\n            let new_w = game.vars.players_radius * 2,\n              new_x = e.x / _margin.x - game.vars.players_radius,\n              new_y = e.y / _margin.y - game.vars.players_radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              throw 3;\n            }\n          }\n        });\n      } catch (c) {\n        return c;\n      }\n      return 0;\n    };\n    game.continue = () => {\n      //  coins\n      ctx.fillStyle = game.vars.coins_c;\n      game.coins.forEach(e => {\n        if (e === null) return;\n        ctx.beginPath();\n        ctx.arc(e.x / _margin.x, e.y / _margin.y, game.vars.coins_radius, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n      //  squares\n      game.squares.forEach(e => {\n        if (e === null) return;\n        ctx.fillStyle = game.vars.main_c_rgb + (1 - 1 / e.health + 0.2) + \")\";\n        ctx.fillRect(e.x / _margin.x, e.y / _margin.y, game.vars.sq_w, game.vars.sq_h);\n      });\n      //  enemies\n      ctx.strokeStyle = game.vars.main_c;\n      game.enemies.forEach(e => {\n        if (e === null) return;\n        let e_x = e.x / _margin.x,\n          e_y = e.y / _margin.y;\n        ctx.fillStyle = game.vars.main_c;\n        ctx.beginPath();\n        ctx.arc(e_x, e_y, game.vars.enemies_radius, e.max_health - e.health, 2 * Math.PI);\n        if (e.mode) ctx.fill();else {\n          ctx.fillStyle = game.vars.main_b;\n          ctx.fill();\n          ctx.stroke();\n        }\n        //  enemy direction\n        let ray_x = e_x + (e.dir_x < 0 ? -(game.vars.enemies_radius / 3) : e.dir_x > 0 ? game.vars.enemies_radius / 3 : 0),\n          ray_y = e_y + (e.dir_y < 0 ? -(game.vars.enemies_radius / 3) : e.dir_y > 0 ? game.vars.enemies_radius / 3 : 0),\n          catcher = 0;\n        ctx.beginPath();\n        ctx.arc(ray_x, ray_y, game.vars.enemies_radius / 3, 0, 2 * Math.PI);\n        ctx.fillStyle = e.mode ? game.vars.main_b : game.vars.main_c;\n        ctx.fill();\n        // enemy ray\n        ctx.beginPath();\n        ctx.moveTo(ray_x, ray_y);\n        while (catcher < game.c_wid && game.collided(ray_x, ray_y, 1, 1, e, true) == 0) {\n          ray_x += 2 * e.dir_x;\n          ray_y += 2 * e.dir_y;\n          catcher++;\n        }\n        ctx.lineTo(ray_x, ray_y);\n        ctx.stroke();\n      });\n      //  players\n      ctx.strokeStyle = game.vars.ps_c;\n      game.players.forEach(e => {\n        if (e === null) return;\n        if (e.state) {\n          let e_x = e.x / _margin.x,\n            e_y = e.y / _margin.y;\n          let x_ray = e_x + (e.dir_x < 0 ? -(game.vars.players_radius / 3) : e.dir_x > 0 ? game.vars.players_radius / 3 : 0),\n            y_ray = e_y + (e.dir_y < 0 ? -(game.vars.players_radius / 3) : e.dir_y > 0 ? game.vars.players_radius / 3 : 0),\n            catcher = 0;\n          //  player itself\n          ctx.fillStyle = game.vars.ps_c;\n          ctx.beginPath();\n          ctx.arc(e_x, e_y, game.vars.players_radius, e.max_health - e.health, 2 * Math.PI);\n          e.mode ? ctx.fill() : ctx.stroke();\n          //  player direction\n          ctx.beginPath();\n          ctx.arc(x_ray, y_ray, game.vars.players_radius / 3, 0, 2 * Math.PI);\n          ctx.fillStyle = e.mode ? game.vars.main_b : game.vars.ps_c;\n          ctx.fill();\n          //  player shoot\n          if (e.shooting > 0) {\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(x_ray, y_ray);\n            while (catcher < game.c_wid && game.collided(x_ray, y_ray, 1, 1, e, e.shooting == 1) == 0) {\n              x_ray += 2 * e.dir_x;\n              y_ray += 2 * e.dir_y;\n              catcher++;\n            }\n            ctx.lineTo(x_ray, y_ray);\n            ctx.stroke();\n            e.shooting += 1;\n          }\n          if (e.shooting > 2) e.shooting = 0;\n        }\n      });\n    };\n\n    /*game.movePlayer = code => {\n    \t////\n    }*/\n\n    game.movePlayer = code => {\n      let p_index = 20,\n        new_x,\n        new_y,\n        p_radius,\n        p;\n      if (game.players.length > 1 && game.players[0].state && (code <= 40 && code >= 37 || code == 13)) {\n        p = 1;\n        if (code == 13) {\n          game.players[p].shooting = 1;\n          return;\n        }\n        game.players[p].dir_x = code == 37 ? -1 : code == 39 ? 1 : 0;\n        game.players[p].dir_y = code == 38 ? -1 : code == 40 ? 1 : 0;\n      } else return;\n      p_radius = game.vars.players_radius;\n      new_x = game.players[p].x + p_index * game.players[p].dir_x;\n      new_y = game.players[p].y + p_index * game.players[p].dir_y;\n      while (p_index >= 0 && game.collided(new_x - p_radius, new_y - p_radius, p_radius * 2, p_radius * 2, game.players[p], false) != 0) {\n        new_x = game.players[p].x + p_index * game.players[p].dir_x;\n        new_y = game.players[p].y + p_index * game.players[p].dir_y;\n        p_index -= 2;\n      }\n      game.players[p].x = new_x;\n      game.players[p].y = new_y;\n      game.send_updates(\"player movements\");\n    };\n    game.pause = () => {\n      ctx.fillStyle = game.vars.main_c;\n      let pause = \"PAUSE\";\n      ctx.fillText(pause, game.c_wid / 2 - pause.length, game.c_hei / 2);\n    };\n    game.end = () => {\n      ctx.fillStyle = game.vars.main_c;\n      let over = \"GAME OVER\",\n        winner = \"NO ONE WON\";\n      ctx.fillText(over, game.c_wid / 2 - over.length / 2 * 10, game.c_hei / 2);\n      ctx.fillText(winner, game.c_wid / 2 - winner.length / 2 * 10, game.c_hei / 2 + 30);\n      setTimeout(() => {\n        game.squares = new Array();\n        game.enemies = new Array();\n        game.coins = new Array();\n        game.players = new Array();\n        game_state = -1;\n        props.toggle(false);\n      }, 3000);\n    };\n    window.onresize = a => {\n      game.c_wid = canvas.width = wrapper.offsetWidth;\n      game.c_hei = canvas.height = window.innerHeight / 2;\n      canvas.style.width = game.c_wid + \"px\";\n      canvas.style.height = game.c_hei + \"px\";\n      game.vars.sq_w = game.c_hei / 10;\n      game.vars.sq_h = game.c_hei / 10;\n    };\n    window.onkeydown = e => game.movePlayer(e.keyCode);\n    game.draw = () => {\n      ctx.clearRect(0, 0, game.c_wid, game.c_hei);\n      ctx.font = \"20px monospace\";\n      ctx.lineWidth = \"2\";\n\n      //game.receive_state();\n      game.receive_updates();\n      switch (game_state) {\n        case 0:\n          break;\n        case 1:\n          game.pause();\n          break;\n        case 2:\n          game.end();\n          break;\n        case -1:\n          break;\n        default:\n          game.continue();\n      }\n      //game.receive_updates();\n      if (game_state != props.state) props.setState(game_state);\n      if (current_players != props.players) props.setPlayers(current_players);\n      requestAnimationFrame(game.draw);\n    };\n    requestAnimationFrame(game.draw);\n  }, []);\n  game_state = props.state;\n  if (props.game_update) game_update = JSON.parse(props.game_update);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\",\n    className: \"off\",\n    children: \"something is wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 9\n  }, this);\n};\n_s(PGame, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PGame;\nexport default PGame;\nvar _c;\n$RefreshReg$(_c, \"PGame\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","canvas","ctx","wrapper","game_state","game_update","current_players","_margin","game","PGame","props","_s","document","getElementById","getContext","c_wid","width","offsetWidth","c_hei","height","window","innerHeight","JSON","parse","vars","sq_w","sq_h","main_c","main_c_rgb","main_b","ps_c","coins_c","enemies_radius","Math","floor","players_radius","coins_radius","squares","Array","enemies","coins","players","receive_updates","x","w","y","h","setPlayers","p_1","p1_score","p_2","p2_score","state","toggle","send_updates","up_type","send_update","stringify","player","collided","s","ray","e_x","e_y","forEach","e","type","new_w","new_x","new_y","c","continue","fillStyle","beginPath","arc","PI","fill","health","fillRect","strokeStyle","max_health","mode","stroke","ray_x","dir_x","ray_y","dir_y","catcher","moveTo","lineTo","x_ray","y_ray","shooting","lineWidth","movePlayer","code","p_index","p_radius","p","length","pause","fillText","end","over","winner","setTimeout","onresize","a","style","onkeydown","keyCode","draw","clearRect","font","setState","requestAnimationFrame","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/beddinao/cursus-0/trancendance/new_stuff/front_shit/src/pgame.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nvar canvas,\n\tctx,\n\twrapper,\n\tgame_state,\n\tgame_update = null,\n\tcurrent_players,\n\t_margin = {},\n\tgame = [];\n\nvar PGame = (props) => {\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(\"canvas\");\n\t\tctx = canvas.getContext(\"2d\");\n\t\twrapper = document.getElementById(\"wrapper\");\n\t\tgame.c_wid = canvas.width = wrapper.offsetWidth;\n\t\tgame.c_hei = canvas.height = window.innerHeight / 2;\n\t\tgame_update = JSON.parse(props.game_update);\n\n\t\tgame.vars = {\n\t\t\tsq_w: game.c_hei / 10,\n\t\t\tsq_h: game.c_hei / 10,\n\t\t\tmain_c: \"#e5e5e5\",\n\t\t\tmain_c_rgb : \"rgb(141, 153, 174, \",\n\t\t\tmain_b: \"#000\",\n\t\t\tps_c : \"#fca311\",\n\t\t\tcoins_c : \"#0582ca\",\n\t\t\tenemies_radius: Math.floor(((game.c_hei / 10) / 3) / 1.5),\n\t\t\tplayers_radius: (game.c_hei / 10) / 5,\n\t\t\tcoins_radius: (game.c_hei / 10) / 8\n\t\t};\n\n\t\tgame.squares = new Array();\n\t\tgame.enemies = new Array();\n\t\tgame.coins = new Array();\n\t\tgame.players = new Array();\n\n\t\tgame.receive_updates = () => {\n\t\t\tif (game_update != null) {\n\t\t\t\t_margin.x = game_update.w / game.c_wid;\n\t\t\t\t_margin.y = game_update.h / game.c_hei;\n\n\t\t\t\tcurrent_players = game_update.current_players;\n\t\t\t\tprops.setPlayers(current_players);\n\n\t\t\t\tgame.squares = game_update.squares;\n\t\t\t\tgame.players = game_update.players;\n\t\t\t\tgame.enemies = game_update.enemies;\n\t\t\t\tgame.coins = game_update.coins;\n\n\t\t\t\tprops.p_1(game_update.p1_score);\n\t\t\t\tprops.p_2(game_update.p2_score);\n\t\t\t\t\n\t\t\t\tif (game_update.state === 0\n\t\t\t\t\t|| (game_update.state === 3 && game_state !== 3))\n\t\t\t\t\tprops.toggle(true);\n\n\t\t\t\tif (game_state != game_update.state)\n\t\t\t\t\tgame_state = game_update.state;\n\n\n\t\t\t\tgame_update = null;\n\t\t\t}\n\t\t}\n\n\t\tgame.send_updates = up_type => {\n\t\t\tprops.send_update(up_type, JSON.stringify({\n\t\t\t\tstate: game_state,\n\t\t\t\tplayer: JSON.stringify(game.players[1])\n\t\t\t}), 'host')\n\t\t}\n\n\t\t/*game.send_state = () => {\n\t\t\tprops.send_update(\"game state\", JSON.stringify({\n\t\t\t\tstate: game_state,\n\t\t\t}), 'host')\n\t\t}\n\n\t\tgame.receive_state = () => {\n\t\t\tif (game_update != null && game_update.state != null) { \n\t\t\t\tif (game_update.state === 0\n\t\t\t\t\t|| (game_update.state === 3 && game_state !== 3))\n\t\t\t\t\tprops.toggle(true);\n\t\t\t\tgame_state = game_update.state;\n\t\t\t\tgame_update = null;\n\t\t\t}\n\t\t}*/\n\n\t\tgame.collided = (x, y, w, h, s, ray) => {\n\t\t\tif (x < 0 || x > game.c_wid - w || y < 0 || y > game.c_hei - h) return 4;\n\t\t\tlet e_x, e_y;\n\t\t\ttry {\n\t\t\t\tgame.squares.forEach((e) => {\n\t\t\t\t\tif (e === null)\treturn;\n\t\t\t\t\te_x = e.x / _margin.x;\n\t\t\t\t\te_y = e.y / _margin.y;\n\t\t\t\t\tif (\n\t\t\t\t\t\te_x <= x + w &&\n\t\t\t\t\t\te_x + game.vars.sq_w >= x &&\n\t\t\t\t\t\te_y <= y + h &&\n\t\t\t\t\t\te_y + game.vars.sq_h >= y\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (ray || s.type == \"enemy\") {\n\t\t\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\t\t\tif (e === null)\treturn;\n\t\t\t\t\t\tlet new_w = game.vars.enemies_radius * 2,\n\t\t\t\t\t\t\tnew_x = (e.x/_margin.x) - game.vars.enemies_radius,\n\t\t\t\t\t\t\tnew_y = (e.y/_margin.y) - game.vars.enemies_radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (s.type == \"player\") {\n\t\t\t\t\tgame.coins.forEach((e) => {\n\t\t\t\t\t\tif (e === null)\treturn;\n\t\t\t\t\t\tlet new_w = game.vars.coins_radius * 2,\n\t\t\t\t\t\t\tnew_x = (e.x/_margin.x) - game.vars.coins_radius,\n\t\t\t\t\t\t\tnew_y = (e.y/_margin.y) - game.vars.coins_radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tgame.players.forEach((e) => {\n\t\t\t\t\tif (e === null)\treturn;\n\t\t\t\t\tif (e.state) {\n\t\t\t\t\t\tlet new_w = game.vars.players_radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x/_margin.x - game.vars.players_radius,\n\t\t\t\t\t\t\tnew_y = e.y/_margin.y - game.vars.players_radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (c) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\t\tgame.continue = () => {\n\t\t\t//  coins\n\t\t\tctx.fillStyle = game.vars.coins_c;\n\t\t\tgame.coins.forEach((e) => {\n\t\t\t\tif (e === null)\treturn;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(e.x / _margin.x, e.y / _margin.y, game.vars.coins_radius, 0, 2 * Math.PI);\n\t\t\t\tctx.fill();\n\t\t\t});\n\t\t\t//  squares\n\t\t\tgame.squares.forEach((e) => {\n\t\t\t\tif (e === null)\treturn;\n\t\t\t\tctx.fillStyle = game.vars.main_c_rgb + ((1-(1/e.health))+0.2) + \")\";\n\t\t\t\tctx.fillRect(e.x / _margin.x, e.y / _margin.y, game.vars.sq_w, game.vars.sq_h);\n\t\t\t});\n\t\t\t//  enemies\n\t\t\tctx.strokeStyle = game.vars.main_c;\n\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\tif (e === null)\treturn;\n\t\t\t\tlet e_x = e.x / _margin.x,\n\t\t\t\te_y = e.y / _margin.y;\n\t\t\t\tctx.fillStyle = game.vars.main_c\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(e_x, e_y, game.vars.enemies_radius, e.max_health - e.health, 2 * Math.PI);\n\t\t\t\tif (e.mode) ctx.fill();\n\t\t\t\telse {\n\t\t\t\t\tctx.fillStyle = game.vars.main_b;\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t\t//  enemy direction\n\t\t\t\tlet ray_x = e_x + (e.dir_x < 0 ? -(game.vars.enemies_radius / 3) : e.dir_x > 0 ? game.vars.enemies_radius / 3 : 0),\n\t\t\t\tray_y = e_y + (e.dir_y < 0 ? -(game.vars.enemies_radius / 3) : e.dir_y > 0 ? game.vars.enemies_radius / 3 : 0),\n\t\t\t\t\tcatcher = 0;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(ray_x, ray_y, game.vars.enemies_radius / 3, 0, 2 * Math.PI);\n\t\t\t\tctx.fillStyle = e.mode ? game.vars.main_b : game.vars.main_c;\n\t\t\t\tctx.fill();\n\t\t\t\t// enemy ray\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(ray_x, ray_y);\n\t\t\t\twhile (\n\t\t\t\t\tcatcher < game.c_wid &&\n\t\t\t\t\tgame.collided(ray_x, ray_y, 1, 1, e, true) == 0\n\t\t\t\t) {\n\t\t\t\t\tray_x += 2 * e.dir_x;\n\t\t\t\t\tray_y += 2 * e.dir_y;\n\t\t\t\t\tcatcher++;\n\t\t\t\t}\n\t\t\t\tctx.lineTo(ray_x, ray_y);\n\t\t\t\tctx.stroke();\n\t\t\t});\n\t\t\t//  players\n\t\t\tctx.strokeStyle = game.vars.ps_c;\n\t\t\tgame.players.forEach((e) => {\n\t\t\t\tif (e === null)\treturn;\n\t\t\t\tif (e.state) {\n\t\t\t\t\tlet e_x = e.x / _margin.x,\n\t\t\t\t\t\te_y = e.y / _margin.y;\n\t\t\t\t\tlet x_ray = e_x + (e.dir_x < 0 ? -(game.vars.players_radius / 3) : e.dir_x > 0 ? game.vars.players_radius / 3 : 0),\n\t\t\t\t\ty_ray = e_y + (e.dir_y < 0 ? -(game.vars.players_radius / 3) : e.dir_y > 0 ? game.vars.players_radius / 3 : 0),\n\t\t\t\t\tcatcher = 0;\n\t\t\t\t\t//  player itself\n\t\t\t\t\tctx.fillStyle = game.vars.ps_c;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(e_x, e_y, game.vars.players_radius, e.max_health - e.health, 2 * Math.PI);\n\t\t\t\t\te.mode ? ctx.fill() : ctx.stroke();\n\t\t\t\t\t//  player direction\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(x_ray, y_ray, game.vars.players_radius / 3, 0, 2 * Math.PI);\n\t\t\t\t\tctx.fillStyle = (e.mode ? game.vars.main_b : game.vars.ps_c);\n\n\t\t\t\t\tctx.fill();\n\t\t\t\t\t//  player shoot\n\t\t\t\t\tif (e.shooting > 0) {\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo(x_ray, y_ray);\n\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\tcatcher < game.c_wid &&\n\t\t\t\t\t\t\tgame.collided(x_ray, y_ray, 1, 1, e, e.shooting == 1) == 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tx_ray += (2 * e.dir_x);\n\t\t\t\t\t\t\ty_ray += (2 * e.dir_y);\n\t\t\t\t\t\t\tcatcher++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.lineTo(x_ray, y_ray);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\te.shooting += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (e.shooting > 2)\n\t\t\t\t\t\te.shooting = 0;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t/*game.movePlayer = code => {\n\t\t\t////\n\t\t}*/\n\n\t\tgame.movePlayer = code => {\n\t\t\tlet p_index = 20,new_x, new_y, p_radius, p;\n\t\t\tif (game.players.length > 1 && game.players[0].state && (code <= 40 && code >= 37 || code == 13)) {\n\t\t\t\tp = 1;\n\t\t\t\tif (code == 13) {\n\t\t\t\t\tgame.players[p].shooting = 1;\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tgame.players[p].dir_x = code == 37 ? -1 : code == 39 ? 1 : 0;\n\t\t\t\tgame.players[p].dir_y = code == 38 ? -1 : code == 40 ? 1 : 0;\n\t\t\t}\n\t\t\telse return;\t\n\t\t\tp_radius = game.vars.players_radius;\n\t\t\tnew_x = game.players[p].x + p_index * game.players[p].dir_x;\n\t\t\tnew_y = game.players[p].y + p_index * game.players[p].dir_y;\n\t\t\twhile (\n\t\t\t\tp_index >= 0 &&\n\t\t\t\tgame.collided(\n\t\t\t\t\tnew_x - p_radius,\n\t\t\t\t\tnew_y - p_radius,\n\t\t\t\t\tp_radius * 2,\n\t\t\t\t\tp_radius * 2,\n\t\t\t\t\tgame.players[p],\n\t\t\t\t\tfalse\n\t\t\t\t) != 0\n\t\t\t) {\n\t\t\t\tnew_x = game.players[p].x + p_index * game.players[p].dir_x;\n\t\t\t\tnew_y = game.players[p].y + p_index * game.players[p].dir_y;\n\t\t\t\tp_index -= 2;\n\t\t\t}\n\t\t\tgame.players[p].x = new_x;\n\t\t\tgame.players[p].y = new_y;\n\t\t\tgame.send_updates(\"player movements\");\n\t\t}\n\n\t\tgame.pause = () => {\n\t\t\tctx.fillStyle = game.vars.main_c;\n\t\t\tlet   pause = \"PAUSE\";\n\t\t\tctx.fillText(pause, game.c_wid/2 - pause.length , game.c_hei / 2);\n\t\t};\n\n\t\tgame.end = () => {\n\t\t\tctx.fillStyle = game.vars.main_c;\n\t\t\tlet   over = \"GAME OVER\",\n\t\t\t\twinner = \"NO ONE WON\";\n\t\t\tctx.fillText(over, game.c_wid/2 - (over.length/2)*10, game.c_hei/2);\n\t\t\tctx.fillText(winner, game.c_wid/2 - (winner.length/2)*10, (game.c_hei/2) + 30);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tgame.squares = new Array();\n\t\t\t\tgame.enemies = new Array();\n\t\t\t\tgame.coins = new Array();\n\t\t\t\tgame.players = new Array();\n\t\t\t\tgame_state = -1;\n\t\t\t\tprops.toggle(false);\n\t\t\t}, 3000)\n\t\t};\n\n\t\twindow.onresize = a => {\n\t\t\tgame.c_wid = canvas.width = wrapper.offsetWidth;\n\t\t\tgame.c_hei = canvas.height = window.innerHeight / 2;\n\t\t\tcanvas.style.width = game.c_wid + \"px\";\n\t\t\tcanvas.style.height = game.c_hei + \"px\";\n\t\t\tgame.vars.sq_w = game.c_hei / 10;\n\t\t\tgame.vars.sq_h = game.c_hei / 10;\n\t\t};\n\n\t\twindow.onkeydown = (e) => game.movePlayer(e.keyCode);\n\t\tgame.draw = () => {\n\t\t\tctx.clearRect(0, 0, game.c_wid, game.c_hei);\n\t\t\tctx.font = \"20px monospace\";\n\t\t\tctx.lineWidth = \"2\";\n\n\t\t\t//game.receive_state();\n\t\t\tgame.receive_updates();\n\t\t\tswitch (game_state) {\n\t\t\t\tcase 0:\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tgame.pause();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tgame.end();\n\t\t\t\t\tbreak;\n\t\t\t\tcase -1:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tgame.continue();\n\t\t\t}\n\t\t\t//game.receive_updates();\n\t\t\tif (game_state != props.state)\n\t\t\t\tprops.setState(game_state);\n\t\t\tif (current_players != props.players)\n\t\t\t\tprops.setPlayers(current_players);\n\t\t\trequestAnimationFrame(game.draw);\n\t\t};\n\t\trequestAnimationFrame(game.draw);\n\t}, []);\n\tgame_state = props.state;\n\tif (props.game_update)\n\t\tgame_update = JSON.parse(props.game_update);\n\treturn <canvas id=\"canvas\" className=\"off\" >something is wrong</canvas>;\n};\n\nexport default PGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}