{"ast":null,"code":"var _jsxFileName = \"/Users/beddinao/cursus-0/trancendance/new_stuff/front_shit/src/pgame.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar canvas,\n  ctx,\n  wrapper,\n  game_state,\n  game_update = null,\n  current_players,\n  game = [];\nvar PGame = props => {\n  _s();\n  useEffect(() => {\n    canvas = document.getElementById(\"canvas\");\n    ctx = canvas.getContext(\"2d\");\n    wrapper = document.getElementById(\"wrapper\");\n    game.c_wid = canvas.width = wrapper.offsetWidth;\n    game.c_hei = canvas.height = window.innerHeight / 2;\n    game_state = props.state;\n    game_update = JSON.parse(props.game_update);\n    game.vars = {\n      sq_w: game.c_hei / 10,\n      sq_h: game.c_hei / 10,\n      main_c: \"#e5e5e5\",\n      main_c_rgb: \"rgb(141, 153, 174, \",\n      main_b: \"#000\",\n      ps_c: \"#fca311\",\n      coins_c: \"#0582ca\"\n    };\n    game.squares = new Array();\n    game.enemies = new Array();\n    game.coins = new Array();\n    game.players = new Array();\n    game.receive_updates = () => {\n      if (game_update != null) {\n        game_state = game_update.state;\n        props.setState(game_state);\n        current_players = game_update.current_players;\n        props.setPlayers(current_players);\n\n        //props.setLogs(JSON.parse(game_update.log));\n\n        game.squares = game_update.squares;\n        game.players = game_update.players;\n        game.enemies = game_update.enemies;\n        game.coins = game_update.coins;\n        game_update = null;\n        console.log(game.players);\n      }\n    };\n    game.collided = (x, y, w, h, s, ray) => {\n      if (x < 0 || x > game.c_wid - w || y < 0 || y > game.c_hei - h) return 4;\n      try {\n        game.squares.forEach(e => {\n          if (e.x <= x + w && e.x + e.w >= x && e.y <= y + h && e.y + e.h >= y) {\n            throw 1;\n          }\n        });\n        if (ray || s.type == \"enemy\") {\n          game.enemies.forEach(e => {\n            let new_w = e.radius * 2,\n              new_x = e.x - e.radius,\n              new_y = e.y - e.radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              throw 2;\n            }\n          });\n        }\n        if (s.type == \"player\") {\n          game.coins.forEach(e => {\n            let new_w = e.radius * 2,\n              new_x = e.x - e.radius,\n              new_y = e.y - e.radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              throw 3;\n            }\n          });\n        }\n        game.players.forEach(e => {\n          if (e.state) {\n            let new_w = e.radius * 2,\n              new_x = e.x - e.radius,\n              new_y = e.y - e.radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              throw 3;\n            }\n          }\n        });\n      } catch (c) {\n        return c;\n      }\n      return 0;\n    };\n    game.continue = () => {\n      //  coins\n      ctx.fillStyle = game.vars.coins_c;\n      game.coins.forEach(e => {\n        ctx.beginPath();\n        ctx.arc(e.x, e.y, e.radius, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n      //  squares\n      game.squares.forEach(e => {\n        ctx.fillStyle = game.vars.main_c_rgb + (1 - 1 / e.health + 0.2) + \")\";\n        ctx.fillRect(e.x, e.y, e.w, e.h);\n      });\n      //  enemies\n      ctx.strokeStyle = game.vars.main_c;\n      game.enemies.forEach(e => {\n        ctx.fillStyle = game.vars.main_c;\n        ctx.beginPath();\n        ctx.arc(e.x, e.y, e.radius, e.max_health - e.health, 2 * Math.PI);\n        if (e.mode) ctx.fill();else {\n          ctx.fillStyle = game.vars.main_b;\n          ctx.fill();\n          ctx.stroke();\n        }\n        //  enemy direction\n        let ray_x = e.x + (e.dir_x < 0 ? -(e.radius / 3) : e.dir_x > 0 ? e.radius / 3 : 0),\n          ray_y = e.y + (e.dir_y < 0 ? -(e.radius / 3) : e.dir_y > 0 ? e.radius / 3 : 0),\n          catcher = 0;\n        ctx.beginPath();\n        ctx.arc(ray_x, ray_y, e.radius / 3, 0, 2 * Math.PI);\n        ctx.fillStyle = e.mode ? game.vars.main_b : game.vars.main_c;\n        ctx.fill();\n        // enemy ray\n        /*ctx.beginPath();\n        ctx.moveTo(ray_x, ray_y);\n        while (\n        \tcatcher < game.c_wid &&\n        \tgame.collided(ray_x, ray_y, 1, 1, e, true) == 0\n        ) {\n        \tray_x += 2 * e.dir_x;\n        \tray_y += 2 * e.dir_y;\n        \tcatcher++;\n        }\n        ctx.lineTo(ray_x, ray_y);\n        ctx.stroke();*/\n      });\n      //  players\n      ctx.strokeStyle = game.vars.ps_c;\n      game.players.forEach(e => {\n        if (e.state) {\n          let x_ray = e.x + (e.dir_x < 0 ? -(e.radius / 3) : e.dir_x > 0 ? e.radius / 3 : 0),\n            y_ray = e.y + (e.dir_y < 0 ? -(e.radius / 3) : e.dir_y > 0 ? e.radius / 3 : 0),\n            catcher = 0;\n          //  player itself\n          ctx.fillStyle = game.vars.ps_c;\n          ctx.beginPath();\n          ctx.arc(e.x, e.y, e.radius, e.max_health - e.health, 2 * Math.PI);\n          e.mode ? ctx.fill() : ctx.stroke();\n          //  player direction\n          ctx.beginPath();\n          ctx.arc(x_ray, y_ray, e.radius / 3, 0, 2 * Math.PI);\n          ctx.fillStyle = e.mode ? game.vars.main_b : game.vars.ps_c;\n          ctx.fill();\n          //  player shoot\n          /*if (e.shooting > 0) {\n          \tctx.lineWidth = 2;\n          \tctx.beginPath();\n          \tctx.moveTo(x_ray, y_ray);\n          \twhile (\n          \t\tcatcher < game.c_wid &&\n          \t\tgame.collided(x_ray, y_ray, 1, 1, e, e.shooting == 1) == 0\n          \t) {\n          \t\tx_ray += (2 * e.dir_x);\n          \t\ty_ray += (2 * e.dir_y);\n          \t\tcatcher++;\n          \t}\n          \tctx.lineTo(x_ray, y_ray);\n          \tctx.stroke();\n          \t//e.shooting += 1;\n          }*/\n          /*if (e.shooting > 2)\n          \te.shooting = 0;*/\n        }\n      });\n    };\n    game.movePlayer = code => {\n      ////\n    };\n    game.pause = () => {\n      ctx.fillStyle = game.vars.main_c;\n      let pause = \"PAUSE\";\n      ctx.fillText(pause, game.c_wid / 2 - pause.length, game.c_hei / 2);\n    };\n    game.end = () => {\n      ctx.fillStyle = game.vars.main_c;\n      let over = \"GAME OVER\",\n        winner = \"NO ONE WON\";\n      ctx.fillText(over, game.c_wid / 2 - over.length / 2 * 10, game.c_hei / 2);\n      ctx.fillText(winner, game.c_wid / 2 - winner.length / 2 * 10, game.c_hei / 2 + 30);\n      setTimeout(() => {\n        game.squares = new Array();\n        game.enemies = new Array();\n        game.coins = new Array();\n        game.players = new Array();\n        game_state = -1;\n        props.setState(game_state);\n        props.toggle();\n      }, 3000);\n    };\n    window.onresize = a => {\n      game.c_wid = canvas.width = wrapper.offsetWidth;\n      game.c_hei = canvas.height = window.innerHeight / 2;\n      canvas.style.width = game.c_wid + \"px\";\n      canvas.style.height = game.c_hei + \"px\";\n      game.vars.sq_w = game.c_hei / 10;\n      game.vars.sq_h = game.c_hei / 10;\n    };\n    game.draw = () => {\n      ctx.clearRect(0, 0, game.c_wid, game.c_hei);\n      ctx.font = \"20px monospace\";\n      ctx.lineWidth = \"2\";\n      switch (game_state) {\n        case 0:\n          window.onkeydown = e => game.movePlayer(e.keyCode);\n          game.receive_updates();\n          break;\n        case 1:\n          game.pause();\n          break;\n        case 2:\n          game.end();\n          break;\n        case -1:\n          break;\n        default:\n          game.receive_updates();\n          game.continue();\n      }\n      requestAnimationFrame(game.draw);\n    };\n    requestAnimationFrame(game.draw);\n  }, []);\n  game_state = props.state;\n  game_update = JSON.parse(props.game_update);\n  current_players = props.players;\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\",\n    className: \"off\",\n    children: \"something is wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n};\n_s(PGame, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PGame;\nexport default PGame;\nvar _c;\n$RefreshReg$(_c, \"PGame\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","canvas","ctx","wrapper","game_state","game_update","current_players","game","PGame","props","_s","document","getElementById","getContext","c_wid","width","offsetWidth","c_hei","height","window","innerHeight","state","JSON","parse","vars","sq_w","sq_h","main_c","main_c_rgb","main_b","ps_c","coins_c","squares","Array","enemies","coins","players","receive_updates","setState","setPlayers","console","log","collided","x","y","w","h","s","ray","forEach","e","type","new_w","radius","new_x","new_y","c","continue","fillStyle","beginPath","arc","Math","PI","fill","health","fillRect","strokeStyle","max_health","mode","stroke","ray_x","dir_x","ray_y","dir_y","catcher","x_ray","y_ray","movePlayer","code","pause","fillText","length","end","over","winner","setTimeout","toggle","onresize","a","style","draw","clearRect","font","lineWidth","onkeydown","keyCode","requestAnimationFrame","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/beddinao/cursus-0/trancendance/new_stuff/front_shit/src/pgame.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nvar canvas,\n\tctx,\n\twrapper,\n\tgame_state,\n\tgame_update = null,\n\tcurrent_players,\n\tgame = [];\n\nvar PGame = (props) => {\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(\"canvas\");\n\t\tctx = canvas.getContext(\"2d\");\n\t\twrapper = document.getElementById(\"wrapper\");\n\t\tgame.c_wid = canvas.width = wrapper.offsetWidth;\n\t\tgame.c_hei = canvas.height = window.innerHeight / 2;\n\t\tgame_state = props.state;\n\t\tgame_update = JSON.parse(props.game_update);\n\n\t\tgame.vars = {\n\t\t\tsq_w: game.c_hei / 10,\n\t\t\tsq_h: game.c_hei / 10,\n\t\t\tmain_c: \"#e5e5e5\",\n\t\t\tmain_c_rgb : \"rgb(141, 153, 174, \",\n\t\t\tmain_b: \"#000\",\n\t\t\tps_c : \"#fca311\",\n\t\t\tcoins_c : \"#0582ca\",\n\t\t};\n\n\t\tgame.squares = new Array();\n\t\tgame.enemies = new Array();\n\t\tgame.coins = new Array();\n\t\tgame.players = new Array();\n\n\t\tgame.receive_updates = () => {\n\t\t\tif (game_update != null) {\n\t\t\t\tgame_state = game_update.state;\n\t\t\t\tprops.setState(game_state);\n\n\t\t\t\tcurrent_players = game_update.current_players;\n\t\t\t\tprops.setPlayers(current_players);\n\n\t\t\t\t//props.setLogs(JSON.parse(game_update.log));\n\n\t\t\t\tgame.squares = game_update.squares;\n\t\t\t\tgame.players = game_update.players;\n\t\t\t\tgame.enemies = game_update.enemies;\n\t\t\t\tgame.coins = game_update.coins;\n\t\t\t\tgame_update = null;\n\t\t\t\tconsole.log(game.players);\n\t\t\t}\n\t\t}\n\n\t\tgame.collided = (x, y, w, h, s, ray) => {\n\t\t\tif (x < 0 || x > game.c_wid - w || y < 0 || y > game.c_hei - h) return 4;\n\n\t\t\ttry {\n\t\t\t\tgame.squares.forEach((e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.x <= x + w &&\n\t\t\t\t\t\te.x + e.w >= x &&\n\t\t\t\t\t\te.y <= y + h &&\n\t\t\t\t\t\te.y + e.h >= y\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (ray || s.type == \"enemy\") {\n\t\t\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\t\t\tlet new_w = e.radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - e.radius,\n\t\t\t\t\t\t\tnew_y = e.y - e.radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (s.type == \"player\") {\n\t\t\t\t\tgame.coins.forEach((e) => {\n\t\t\t\t\t\tlet new_w = e.radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - e.radius,\n\t\t\t\t\t\t\tnew_y = e.y - e.radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tgame.players.forEach((e) => {\n\t\t\t\t\tif (e.state) {\n\t\t\t\t\t\tlet new_w = e.radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - e.radius,\n\t\t\t\t\t\t\tnew_y = e.y - e.radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (c) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\t\tgame.continue = () => {\n\t\t\t//  coins\n\t\t\tctx.fillStyle = game.vars.coins_c;\n\t\t\tgame.coins.forEach((e) => {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(e.x, e.y, e.radius, 0, 2 * Math.PI);\n\t\t\t\tctx.fill();\n\t\t\t});\n\t\t\t//  squares\n\t\t\tgame.squares.forEach((e) => {\n\t\t\t\tctx.fillStyle = game.vars.main_c_rgb + ((1-(1/e.health))+0.2) + \")\";\n\t\t\t\tctx.fillRect(e.x, e.y, e.w, e.h);\n\t\t\t});\n\t\t\t//  enemies\n\t\t\tctx.strokeStyle = game.vars.main_c;\n\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\tctx.fillStyle = game.vars.main_c\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(e.x, e.y, e.radius, e.max_health - e.health, 2 * Math.PI);\n\t\t\t\tif (e.mode) ctx.fill();\n\t\t\t\telse {\n\t\t\t\t\tctx.fillStyle = game.vars.main_b;\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t\t//  enemy direction\n\t\t\t\tlet ray_x =\n\t\t\t\t\te.x +\n\t\t\t\t\t(e.dir_x < 0 ? -(e.radius / 3) : e.dir_x > 0 ? e.radius / 3 : 0),\n\t\t\t\t\tray_y =\n\t\t\t\t\te.y +\n\t\t\t\t\t(e.dir_y < 0 ? -(e.radius / 3) : e.dir_y > 0 ? e.radius / 3 : 0),\n\t\t\t\t\tcatcher = 0;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(ray_x, ray_y, e.radius / 3, 0, 2 * Math.PI);\n\t\t\t\tctx.fillStyle = e.mode ? game.vars.main_b : game.vars.main_c;\n\t\t\t\tctx.fill();\n\t\t\t\t// enemy ray\n\t\t\t\t/*ctx.beginPath();\n\t\t\t\tctx.moveTo(ray_x, ray_y);\n\t\t\t\twhile (\n\t\t\t\t\tcatcher < game.c_wid &&\n\t\t\t\t\tgame.collided(ray_x, ray_y, 1, 1, e, true) == 0\n\t\t\t\t) {\n\t\t\t\t\tray_x += 2 * e.dir_x;\n\t\t\t\t\tray_y += 2 * e.dir_y;\n\t\t\t\t\tcatcher++;\n\t\t\t\t}\n\t\t\t\tctx.lineTo(ray_x, ray_y);\n\t\t\t\tctx.stroke();*/\n\t\t\t});\n\t\t\t//  players\n\t\t\tctx.strokeStyle = game.vars.ps_c;\n\t\t\tgame.players.forEach((e) => {\n\t\t\t\tif (e.state) {\n\t\t\t\t\tlet x_ray =\n\t\t\t\t\t\te.x +\n\t\t\t\t\t\t(e.dir_x < 0 ? -(e.radius / 3) : e.dir_x > 0 ? e.radius / 3 : 0),\n\t\t\t\t\t\ty_ray =\n\t\t\t\t\t\te.y +\n\t\t\t\t\t\t(e.dir_y < 0 ? -(e.radius / 3) : e.dir_y > 0 ? e.radius / 3 : 0),\n\t\t\t\t\t\tcatcher = 0;\n\t\t\t\t\t//  player itself\n\t\t\t\t\tctx.fillStyle = game.vars.ps_c;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(e.x, e.y, e.radius, e.max_health - e.health, 2 * Math.PI);\n\t\t\t\t\te.mode ? ctx.fill() : ctx.stroke();\n\t\t\t\t\t//  player direction\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(x_ray, y_ray, e.radius / 3, 0, 2 * Math.PI);\n\t\t\t\t\tctx.fillStyle = (e.mode ? game.vars.main_b : game.vars.ps_c);\n\n\t\t\t\t\tctx.fill();\n\t\t\t\t\t//  player shoot\n\t\t\t\t\t/*if (e.shooting > 0) {\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo(x_ray, y_ray);\n\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\tcatcher < game.c_wid &&\n\t\t\t\t\t\t\tgame.collided(x_ray, y_ray, 1, 1, e, e.shooting == 1) == 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tx_ray += (2 * e.dir_x);\n\t\t\t\t\t\t\ty_ray += (2 * e.dir_y);\n\t\t\t\t\t\t\tcatcher++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.lineTo(x_ray, y_ray);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t//e.shooting += 1;\n\t\t\t\t\t}*/\n\t\t\t\t\t/*if (e.shooting > 2)\n\t\t\t\t\t\te.shooting = 0;*/\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tgame.movePlayer = code => {\n\t\t\t////\n\t\t}\n\n\t\tgame.pause = () => {\n\t\t\tctx.fillStyle = game.vars.main_c;\n\t\t\tlet   pause = \"PAUSE\";\n\t\t\tctx.fillText(pause, game.c_wid/2 - pause.length , game.c_hei / 2);\n\t\t};\n\n\t\tgame.end = () => {\n\t\t\tctx.fillStyle = game.vars.main_c;\n\t\t\tlet   over = \"GAME OVER\",\n\t\t\t\twinner = \"NO ONE WON\";\n\t\t\tctx.fillText(over, game.c_wid/2 - (over.length/2)*10, game.c_hei/2);\n\t\t\tctx.fillText(winner, game.c_wid/2 - (winner.length/2)*10, (game.c_hei/2) + 30);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tgame.squares = new Array();\n\t\t\t\tgame.enemies = new Array();\n\t\t\t\tgame.coins = new Array();\n\t\t\t\tgame.players = new Array();\n\t\t\t\tgame_state = -1;\n\t\t\t\tprops.setState(game_state);\n\t\t\t\tprops.toggle();\n\t\t\t}, 3000)\n\t\t};\n\n\t\twindow.onresize = a => {\n\t\t\tgame.c_wid = canvas.width = wrapper.offsetWidth;\n\t\t\tgame.c_hei = canvas.height = window.innerHeight / 2;\n\t\t\tcanvas.style.width = game.c_wid + \"px\";\n\t\t\tcanvas.style.height = game.c_hei + \"px\";\n\t\t\tgame.vars.sq_w = game.c_hei / 10;\n\t\t\tgame.vars.sq_h = game.c_hei / 10;\n\t\t};\n\n\t\tgame.draw = () => {\n\t\t\tctx.clearRect(0, 0, game.c_wid, game.c_hei);\n\t\t\tctx.font = \"20px monospace\";\n\t\t\tctx.lineWidth = \"2\";\n\n\t\t\tswitch (game_state) {\n\t\t\t\tcase 0:\n\t\t\t\t\twindow.onkeydown = (e) => game.movePlayer(e.keyCode);\n\t\t\t\t\tgame.receive_updates();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tgame.pause();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tgame.end();\n\t\t\t\t\tbreak;\n\t\t\t\tcase -1:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tgame.receive_updates();\n\t\t\t\t\tgame.continue();\n\t\t\t}\n\t\t\trequestAnimationFrame(game.draw);\n\t\t};\n\t\trequestAnimationFrame(game.draw);\n\t}, []);\n\tgame_state = props.state;\n\tgame_update = JSON.parse(props.game_update);\n\tcurrent_players = props.players;\n\treturn <canvas id=\"canvas\" className=\"off\" >something is wrong</canvas>;\n};\n\nexport default PGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}