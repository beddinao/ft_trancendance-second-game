{"ast":null,"code":"var _jsxFileName = \"/Users/beddinao/cursus-0/trancendance/new_stuff/front_shit/src/game.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar canvas,\n  ctx,\n  wrapper,\n  game_state,\n  current_players,\n  game = [];\nvar Game = props => {\n  _s();\n  useEffect(() => {\n    canvas = document.getElementById(\"canvas\");\n    ctx = canvas.getContext(\"2d\");\n    wrapper = document.getElementById(\"wrapper\");\n    game.c_wid = canvas.width = wrapper.offsetWidth;\n    game.c_hei = canvas.height = window.innerHeight / 2;\n    game_state = props.state;\n    game.vars = {\n      sq_w: game.c_hei / 10,\n      sq_h: game.c_hei / 10,\n      main_c: \"#e5e5e5\",\n      main_c_rgb: \"rgb(141, 153, 174, \",\n      main_b: \"#000\",\n      ps_c: \"#fca311\",\n      coins_c: \"#0582ca\",\n      enemies_MpF: 4,\n      enemies_c_f: 0,\n      enemies_radius: Math.floor(game.c_hei / 10 / 3 / 1.5),\n      coins_radius: game.c_hei / 10 / 8,\n      players_radius: game.c_hei / 10 / 5\n    };\n    console.log(game.vars.enemies_radius, \" \", game.vars.coins_radius, \" \", game.vars.players_radius);\n    game.squares = new Array();\n    game.enemies = new Array();\n    game.coins = new Array();\n    game.players = new Array();\n    var rand_num = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    };\n    game.initiate = () => {\n      let a,\n        b,\n        c,\n        d,\n        p = true;\n      for (let i = 0; i < game.c_wid - 1; i += game.vars.sq_w) {\n        for (let j = 0; j < game.c_hei - 1 && rand_num(0, i / 3); j += game.vars.sq_h) {\n          d = game.players.length < current_players && (p || i > game.c_wid / 2);\n          a = !d && (game.squares.length < 20 || rand_num(0, 1));\n          b = !d && !a && game.enemies.length < props.enemies && !rand_num(0, 5);\n          c = !d && !a && !b && game.coins.length < props.coins && !rand_num(0, 5);\n          if (a) game.squares.push({\n            x: i,\n            y: j,\n            //w: game.vars.sq_w,\n            //h: game.vars.sq_h,\n            type: \"wall\",\n            health: rand_num(1, 5)\n          });else if (b) {\n            b = game.vars.sq_w / 3;\n            game.enemies.push({\n              x: i + b,\n              y: j + b,\n              //radius: Math.floor(b / 1.5),\n              mode: !(game.enemies.length % 2),\n              dir_x: rand_num(0, 1) ? -1 : 1,\n              dir_y: rand_num(0, 1) ? -1 : 1,\n              type: \"enemy\",\n              health: !(game.enemies.length % 2) ? 4 : 8,\n              max_health: !(game.enemies.length % 2) ? 4 : 8\n            });\n          } else if (c) {\n            //c = game.vars.sq_w / 8;\n            game.coins.push({\n              x: i + game.vars.sq_w / 2,\n              y: j + game.vars.sq_h / 2,\n              //radius: c,\n              type: \"coin\"\n            });\n          } else if (d) {\n            p = false;\n            d = game.vars.sq_w / 2;\n            game.players.push({\n              x: i + d,\n              y: j + d,\n              //radius: Math.floor(game.vars.sq_w / 5),\n              mode: game.players.length,\n              dir_x: rand_num(-1, 1),\n              dir_y: rand_num(-1, 1),\n              shooting: 0,\n              type: \"player\",\n              state: 1,\n              coins: 0,\n              health: 5,\n              max_health: 3\n            });\n            //}\n          }\n        }\n      }\n    };\n    game.handle_collision = (cause, target) => {\n      let color = game.vars.main_c,\n        update = 0,\n        log;\n      if (target.type == \"wall\") {\n        log = \"hit wall, \";\n        target.health -= 1;\n        if (!target.health) {\n          game.squares.splice(game.squares.indexOf(target), 1);\n          log += \"destroyed\";\n        } else log += \"health: \" + target.health;\n      } else if (target.type == \"enemy\") {\n        log = \"hit enemy, \";\n        target.health -= 1;\n        if (!target.health) {\n          game.enemies.splice(game.enemies.indexOf(target), 1);\n          cause.coins += 2;\n          update = 1;\n          log += \"(got them +2)\";\n          color = game.vars.ps_c;\n        } else log += \", health: \" + target.health;\n      } else if (target.type == \"player\") {\n        log = \"player got hit \";\n        update = 2;\n        target.health -= 1;\n        if (!target.health) {\n          game.players[game.players.indexOf(target)].state = 0;\n          current_players--;\n          log += \" and destroyed \";\n          if (!current_players) {\n            log += \", ending game\";\n            game_state = 2;\n            props.setState(game_state);\n          }\n          props.setPlayers(current_players);\n          color = \"red\";\n        } else log += target.health + \" more\";\n      } else if (target.type == \"coin\") {\n        log = \"got coin \";\n        game.coins.splice(game.coins.indexOf(target), 1);\n        cause.coins += 1;\n        color = game.vars.coins_c;\n        update = 1;\n        log += \"+1\";\n        if (game.coins.length == 0) {\n          game_state = 2;\n          props.setState(game_state);\n        }\n      }\n      if (update) {\n        if (update == 1) {\n          if (cause.mode == 0) props.p_1(cause.coins);else props.p_2(cause.coins);\n        } else {\n          if (target.mode == 0) props.p_1(target.coins);else props.p_2(target.coins);\n        }\n      }\n      let logs = props.log;\n      logs.push(/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: color\n        },\n        children: log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }, this));\n      props.setLogs(logs);\n    };\n    game.collided = (x, y, w, h, s, ray) => {\n      if (s.type == \"enemy\" && !ray) console.log(x, y, w, h);\n      if (x < 0 || x > game.c_wid - w || y < 0 || y > game.c_hei - h) return 4;\n      try {\n        game.squares.forEach(e => {\n          if (e.x <= x + w && e.x + game.vars.sq_w >= x && e.y <= y + h && e.y + game.vars.sq_h >= y) {\n            if (s.type == \"player\" && ray) game.handle_collision(s, e);\n            throw 1;\n          }\n        });\n        if (ray || s.type == \"enemy\") {\n          game.enemies.forEach(e => {\n            let new_w = game.vars.enemies_radius * 2,\n              new_x = e.x - game.vars.enemies_radius,\n              new_y = e.y - game.vars.enemies_radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              if (s.type == \"player\") game.handle_collision(s, e);\n              throw 2;\n            }\n          });\n        }\n        if (s.type == \"player\") {\n          game.coins.forEach(e => {\n            let new_w = game.vars.coins_radius * 2,\n              new_x = e.x - game.vars.coins_radius,\n              new_y = e.y - game.vars.coins_radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              game.handle_collision(s, e);\n              throw 3;\n            }\n          });\n        }\n        game.players.forEach(e => {\n          if (e.state) {\n            let new_w = game.vars.players_radius * 2,\n              new_x = e.x - game.vars.players_radius,\n              new_y = e.y - game.vars.players_radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              if (s.type == \"enemy\" || s.type == \"player\" && ray) game.handle_collision(s, e);\n              throw 3;\n            }\n          }\n        });\n      } catch (c) {\n        return c;\n      }\n      return 0;\n    };\n    game.continue = () => {\n      //  coins\n      ctx.fillStyle = game.vars.coins_c;\n      game.coins.forEach(e => {\n        ctx.beginPath();\n        ctx.arc(e.x, e.y, game.vars.coins_radius, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n      //  squares\n      game.squares.forEach(e => {\n        ctx.fillStyle = game.vars.main_c_rgb + (1 - 1 / e.health + 0.2) + \")\";\n        ctx.fillRect(e.x, e.y, game.vars.sq_w, game.vars.sq_h);\n      });\n      //  enemies\n      ctx.strokeStyle = game.vars.main_c;\n      game.enemies.forEach(e => {\n        ctx.fillStyle = game.vars.main_c;\n        ctx.beginPath();\n        ctx.arc(e.x, e.y, game.vars.enemies_radius, e.max_health - e.health, 2 * Math.PI);\n        if (e.mode) ctx.fill();else {\n          ctx.fillStyle = game.vars.main_b;\n          ctx.fill();\n          ctx.stroke();\n        }\n        //  enemy direction\n        let ray_x = e.x + (e.dir_x < 0 ? -(game.vars.enemies_radius / 3) : e.dir_x > 0 ? game.vars.enemies_radius / 3 : 0),\n          ray_y = e.y + (e.dir_y < 0 ? -(game.vars.enemies_radius / 3) : e.dir_y > 0 ? game.vars.enemies_radius / 3 : 0),\n          catcher = 0;\n        ctx.beginPath();\n        ctx.arc(ray_x, ray_y, game.vars.enemies_radius / 3, 0, 2 * Math.PI);\n        ctx.fillStyle = e.mode ? game.vars.main_b : game.vars.main_c;\n        ctx.fill();\n        // enemy ray\n        ctx.beginPath();\n        ctx.moveTo(ray_x, ray_y);\n        while (catcher < game.c_wid && game.collided(ray_x, ray_y, 1, 1, e, true) == 0) {\n          ray_x += 2 * e.dir_x;\n          ray_y += 2 * e.dir_y;\n          catcher++;\n        }\n        ctx.lineTo(ray_x, ray_y);\n        ctx.stroke();\n      });\n      //  players\n      ctx.strokeStyle = game.vars.ps_c;\n      game.players.forEach(e => {\n        if (e.state) {\n          let x_ray = e.x + (e.dir_x < 0 ? -(game.vars.players_radius / 3) : e.dir_x > 0 ? game.vars.players_radius / 3 : 0),\n            y_ray = e.y + (e.dir_y < 0 ? -(game.vars.players_radius / 3) : e.dir_y > 0 ? game.vars.players_radius / 3 : 0),\n            catcher = 0;\n          //  player itself\n          ctx.fillStyle = game.vars.ps_c;\n          ctx.beginPath();\n          ctx.arc(e.x, e.y, game.vars.players_radius, e.max_health - e.health, 2 * Math.PI);\n          e.mode ? ctx.fill() : ctx.stroke();\n          //  player direction\n          ctx.beginPath();\n          ctx.arc(x_ray, y_ray, game.vars.players_radius / 3, 0, 2 * Math.PI);\n          ctx.fillStyle = e.mode ? game.vars.main_b : game.vars.ps_c;\n          ctx.fill();\n          //  player shoot\n          if (e.shooting > 0) {\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(x_ray, y_ray);\n            while (catcher < game.c_wid && game.collided(x_ray, y_ray, 1, 1, e, e.shooting == 1) == 0) {\n              x_ray += 2 * e.dir_x;\n              y_ray += 2 * e.dir_y;\n              catcher++;\n            }\n            ctx.lineTo(x_ray, y_ray);\n            ctx.stroke();\n            e.shooting += 1;\n          }\n          if (e.shooting > 2) e.shooting = 0;\n        }\n      });\n    };\n    game.moveEnemies = () => {\n      if (game.vars.enemies_c_f < game.vars.enemies_MpF) game.vars.enemies_c_f++;else {\n        let new_x, new_y;\n        game.vars.enemies_c_f = 0;\n        game.enemies.forEach(e => {\n          new_x = e.x + 5 * e.dir_x;\n          new_y = e.y + 5 * e.dir_y;\n          if (game.collided(new_x - game.vars.enemies_radius, new_y - game.vars.enemies_radius, game.vars.enemies_radius * 2, game.vars.enemies_radius * 2, e, false) != 0) {\n            let new_dir_x, new_dir_y;\n            new_dir_x = rand_num(-1, 1);\n            while ((new_dir_y = rand_num(-1, 1)) == e.dir_y);\n            e.dir_x = new_dir_x;\n            e.dir_y = !new_dir_y && !new_dir_x ? rand_num(0, 1) ? -1 : 1 : new_dir_y;\n          } else {\n            e.x = new_x;\n            e.y = new_y;\n          }\n        });\n      }\n    };\n    game.movePlayer = code => {\n      let p_index = 20,\n        new_x,\n        new_y,\n        p_radius,\n        p;\n      if (game.players.length > 0 && game.players[0].state && (code <= 40 && code >= 37 || code == 13)) {\n        p = 0;\n        if (code == 13) {\n          game.players[p].shooting = 1;\n          return;\n        }\n        game.players[p].dir_x = code == 37 ? -1 : code == 39 ? 1 : 0;\n        game.players[p].dir_y = code == 38 ? -1 : code == 40 ? 1 : 0;\n      } else if (game.players.length > 1 && game.players[1].state && (code == 32 || code == 65 || code == 83 || code == 68 || code == 87)) {\n        p = 1;\n        if (code == 32) {\n          game.players[p].shooting = 1;\n          return;\n        }\n        game.players[p].dir_x = code == 65 ? -1 : code == 68 ? 1 : 0;\n        game.players[p].dir_y = code == 87 ? -1 : code == 83 ? 1 : 0;\n      } else return;\n      p_radius = game.vars.players_radius;\n      new_x = game.players[p].x + p_index * game.players[p].dir_x;\n      new_y = game.players[p].y + p_index * game.players[p].dir_y;\n      while (p_index >= 0 && game.collided(new_x - p_radius, new_y - p_radius, p_radius * 2, p_radius * 2, game.players[p], false) != 0) {\n        new_x = game.players[p].x + p_index * game.players[p].dir_x;\n        new_y = game.players[p].y + p_index * game.players[p].dir_y;\n        p_index -= 2;\n      }\n      game.players[p].x = new_x;\n      game.players[p].y = new_y;\n    };\n    game.send_updates = () => {\n      props.send_update(\"game update\", JSON.stringify({\n        state: game_state,\n        current_players: current_players,\n        players: game.players,\n        enemies: game.enemies,\n        coins: game.coins,\n        squares: game.squares,\n        log: props.log\n      }), 'guest');\n    };\n    game.pause = () => {\n      ctx.fillStyle = game.vars.main_c;\n      let pause = \"PAUSE\";\n      ctx.fillText(pause, game.c_wid / 2 - pause.length, game.c_hei / 2);\n    };\n    game.end = () => {\n      ctx.fillStyle = game.vars.main_c;\n      let over = \"GAME OVER\",\n        winner = game.players[0].coins > game.players[1].coins ? \"PLAYER 1\" : game.players[0].coins < game.players[1].coins ? \"PLAYER 2\" : \"NO ONE\";\n      winner += \" WON\";\n      ctx.fillText(over, game.c_wid / 2 - over.length / 2 * 10, game.c_hei / 2);\n      ctx.fillText(winner, game.c_wid / 2 - winner.length / 2 * 10, game.c_hei / 2 + 30);\n      setTimeout(() => {\n        game.squares = new Array();\n        game.enemies = new Array();\n        game.coins = new Array();\n        game.players = new Array();\n        game_state = -1;\n        props.setState(game_state);\n        props.toggle();\n      }, 3000);\n    };\n    window.onresize = a => {\n      game.c_wid = canvas.width = wrapper.offsetWidth;\n      game.c_hei = canvas.height = window.innerHeight / 2;\n      canvas.style.width = game.c_wid + \"px\";\n      canvas.style.height = game.c_hei + \"px\";\n      game.vars.sq_w = game.c_hei / 10;\n      game.vars.sq_h = game.c_hei / 10;\n    };\n    game.draw = () => {\n      ctx.clearRect(0, 0, game.c_wid, game.c_hei);\n      ctx.font = \"20px monospace\";\n      ctx.lineWidth = \"2\";\n      switch (game_state) {\n        case 0:\n          game.initiate();\n          window.onkeydown = e => game.movePlayer(e.keyCode);\n          game_state = 3;\n          props.setState(game_state);\n          break;\n        case 1:\n          game.pause();\n          break;\n        case 2:\n          game.end();\n          break;\n        case -1:\n          break;\n        default:\n          game.moveEnemies();\n          game.send_updates();\n          game.continue();\n      }\n      requestAnimationFrame(game.draw);\n    };\n    requestAnimationFrame(game.draw);\n  }, []);\n  game_state = props.state;\n  current_players = props.players;\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\",\n    className: \"off\",\n    children: \"something is wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","canvas","ctx","wrapper","game_state","current_players","game","Game","props","_s","document","getElementById","getContext","c_wid","width","offsetWidth","c_hei","height","window","innerHeight","state","vars","sq_w","sq_h","main_c","main_c_rgb","main_b","ps_c","coins_c","enemies_MpF","enemies_c_f","enemies_radius","Math","floor","coins_radius","players_radius","console","log","squares","Array","enemies","coins","players","rand_num","min","max","random","initiate","a","b","c","d","p","i","j","length","push","x","y","type","health","mode","dir_x","dir_y","max_health","shooting","handle_collision","cause","target","color","update","splice","indexOf","setState","setPlayers","p_1","p_2","logs","style","children","fileName","_jsxFileName","lineNumber","columnNumber","setLogs","collided","w","h","s","ray","forEach","e","new_w","new_x","new_y","continue","fillStyle","beginPath","arc","PI","fill","fillRect","strokeStyle","stroke","ray_x","ray_y","catcher","moveTo","lineTo","x_ray","y_ray","lineWidth","moveEnemies","new_dir_x","new_dir_y","movePlayer","code","p_index","p_radius","send_updates","send_update","JSON","stringify","pause","fillText","end","over","winner","setTimeout","toggle","onresize","draw","clearRect","font","onkeydown","keyCode","requestAnimationFrame","id","className","_c","$RefreshReg$"],"sources":["/Users/beddinao/cursus-0/trancendance/new_stuff/front_shit/src/game.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nvar canvas,\n\tctx,\n\twrapper,\n\tgame_state,\n\tcurrent_players,\n\tgame = [];\n\nvar Game = (props) => {\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(\"canvas\");\n\t\tctx = canvas.getContext(\"2d\");\n\t\twrapper = document.getElementById(\"wrapper\");\n\t\tgame.c_wid = canvas.width = wrapper.offsetWidth;\n\t\tgame.c_hei = canvas.height = window.innerHeight / 2;\n\t\tgame_state = props.state;\n\n\t\tgame.vars = {\n\t\t\tsq_w: game.c_hei / 10,\n\t\t\tsq_h: game.c_hei / 10,\n\t\t\tmain_c: \"#e5e5e5\",\n\t\t\tmain_c_rgb : \"rgb(141, 153, 174, \",\n\t\t\tmain_b: \"#000\",\n\t\t\tps_c : \"#fca311\",\n\t\t\tcoins_c : \"#0582ca\",\n\t\t\tenemies_MpF: 4,\n\t\t\tenemies_c_f: 0,\n\t\t\tenemies_radius: Math.floor(((game.c_hei / 10) / 3) / 1.5),\n\t\t\tcoins_radius: (game.c_hei / 10) / 8,\n\t\t\tplayers_radius: (game.c_hei / 10) / 5\n\t\t};\n\t\tconsole.log(game.vars.enemies_radius, \" \", game.vars.coins_radius, \" \", game.vars.players_radius);\n\n\t\tgame.squares = new Array();\n\t\tgame.enemies = new Array();\n\t\tgame.coins = new Array();\n\t\tgame.players = new Array();\n\n\t\tvar rand_num = (min, max) => {\n\t\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\n\t\t};\n\n\t\tgame.initiate = () => {\n\t\t\tlet a, b, c, d, p=true;\n\t\t\tfor (let i = 0; i < game.c_wid - 1; i += game.vars.sq_w) {\n\t\t\t\tfor (\n\t\t\t\t\tlet j = 0;\n\t\t\t\t\tj < game.c_hei - 1 && rand_num(0, i / 3);\n\t\t\t\t\tj += game.vars.sq_h\n\t\t\t\t) {\n\t\t\t\t\td = game.players.length < current_players && (p || i > game.c_wid/2);\n\t\t\t\t\ta = !d && (game.squares.length < 20 || rand_num(0, 1));\n\t\t\t\t\tb = !d && !a && game.enemies.length < props.enemies && !rand_num(0, 5);\n\t\t\t\t\tc = !d && !a && !b && game.coins.length < props.coins && !rand_num(0, 5);\n\n\t\t\t\t\tif (a)\n\t\t\t\t\t\tgame.squares.push({\n\t\t\t\t\t\t\tx: i,\n\t\t\t\t\t\t\ty: j,\n\t\t\t\t\t\t\t//w: game.vars.sq_w,\n\t\t\t\t\t\t\t//h: game.vars.sq_h,\n\t\t\t\t\t\t\ttype: \"wall\",\n\t\t\t\t\t\t\thealth : rand_num(1, 5),\n\t\t\t\t\t\t});\n\t\t\t\t\telse if (b) {\n\t\t\t\t\t\tb = game.vars.sq_w / 3;\n\t\t\t\t\t\tgame.enemies.push({\n\t\t\t\t\t\t\tx: i + b,\n\t\t\t\t\t\t\ty: j + b,\n\t\t\t\t\t\t\t//radius: Math.floor(b / 1.5),\n\t\t\t\t\t\t\tmode: !(game.enemies.length % 2),\n\t\t\t\t\t\t\tdir_x: rand_num(0, 1) ? -1 : 1,\n\t\t\t\t\t\t\tdir_y: rand_num(0, 1) ? -1 : 1,\n\t\t\t\t\t\t\ttype: \"enemy\",\n\t\t\t\t\t\t\thealth : !(game.enemies.length % 2) ? 4 : 8,\n\t\t\t\t\t\t\tmax_health : !(game.enemies.length % 2) ? 4 : 8,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (c) {\n\t\t\t\t\t\t//c = game.vars.sq_w / 8;\n\t\t\t\t\t\tgame.coins.push({\n\t\t\t\t\t\t\tx: i + game.vars.sq_w / 2,\n\t\t\t\t\t\t\ty: j + game.vars.sq_h / 2,\n\t\t\t\t\t\t\t//radius: c,\n\t\t\t\t\t\t\ttype: \"coin\",\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (d) {\n\t\t\t\t\t\tp = false;\n\t\t\t\t\t\td = game.vars.sq_w / 2;\n\t\t\t\t\t\tgame.players.push({\n\t\t\t\t\t\t\tx: i + d,\n\t\t\t\t\t\t\ty: j + d,\n\t\t\t\t\t\t\t//radius: Math.floor(game.vars.sq_w / 5),\n\t\t\t\t\t\t\tmode: game.players.length,\n\t\t\t\t\t\t\tdir_x: rand_num(-1, 1),\n\t\t\t\t\t\t\tdir_y: rand_num(-1, 1),\n\t\t\t\t\t\t\tshooting: 0,\n\t\t\t\t\t\t\ttype: \"player\",\n\t\t\t\t\t\t\tstate: 1,\n\t\t\t\t\t\t\tcoins: 0,\n\t\t\t\t\t\t\thealth : 5,\n\t\t\t\t\t\t\tmax_health : 3,\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tgame.handle_collision = (cause, target) => {\n\t\t\tlet color = game.vars.main_c, update = 0 ,\n\t\t\t\tlog;\n\n\t\t\tif (target.type == \"wall\") {\n\t\t\t\tlog = \"hit wall, \"\n\t\t\t\ttarget.health -= 1;\n\t\t\t\tif (!target.health) {\n\t\t\t\t\tgame.squares.splice(game.squares.indexOf(target), 1);\n\t\t\t\t\tlog += \"destroyed\"\n\t\t\t\t}\n\t\t\t\telse log += \"health: \" + target.health\n\t\t\t}\n\t\t\telse if (target.type == \"enemy\") {\n\t\t\t\tlog = \"hit enemy, \"\n\t\t\t\ttarget.health -= 1;\n\t\t\t\tif (!target.health) {\n\t\t\t\t\tgame.enemies.splice(game.enemies.indexOf(target), 1);\n\t\t\t\t\tcause.coins += 2;\n\t\t\t\t\tupdate = 1;\n\t\t\t\t\tlog += \"(got them +2)\"\n\t\t\t\t\tcolor = game.vars.ps_c;\n\t\t\t\t}\n\t\t\t\telse log += \", health: \" + target.health;\n\t\t\t}\n\t\t\telse if (target.type == \"player\") {\n\t\t\t\tlog = \"player got hit \"\n\t\t\t\tupdate = 2;\n\t\t\t\ttarget.health -= 1;\n\t\t\t\tif (!target.health) {\n\t\t\t\t\tgame.players[game.players.indexOf(target)].state = 0;\n\t\t\t\t\tcurrent_players--;\n\t\t\t\t\tlog += \" and destroyed \"\n\t\t\t\t\tif (!current_players) {\n\t\t\t\t\t\tlog += \", ending game\"\n\t\t\t\t\t\tgame_state = 2;\n\t\t\t\t\t\tprops.setState(game_state);\n\t\t\t\t\t}\n\t\t\t\t\tprops.setPlayers(current_players);\n\t\t\t\t\tcolor = \"red\";\n\t\t\t\t}\n\t\t\t\telse log += target.health + \" more\"\n\t\t\t} else if (target.type == \"coin\") {\n\t\t\t\tlog = \"got coin \"\n\t\t\t\tgame.coins.splice(game.coins.indexOf(target), 1);\n\t\t\t\tcause.coins += 1;\n\t\t\t\tcolor = game.vars.coins_c;\n\t\t\t\tupdate = 1;\n\t\t\t\tlog += \"+1\"\n\t\t\t\tif (game.coins.length == 0) {\n\t\t\t\t\tgame_state = 2;\n\t\t\t\t\tprops.setState(game_state);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (update) {\n\t\t\t\tif (update == 1) {\n\t\t\t\t\tif (cause.mode == 0) props.p_1(cause.coins);\n\t\t\t\t\telse props.p_2(cause.coins);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (target.mode == 0) props.p_1(target.coins);\n\t\t\t\t\telse props.p_2(target.coins);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet logs = props.log;\n\t\t\tlogs.push(\n\t\t\t\t<p style={{ color: color }}>\n\t\t\t\t{log}\n\t\t\t\t</p>\n\t\t\t);\n\n\t\t\tprops.setLogs(logs);\n\t\t};\n\n\t\tgame.collided = (x, y, w, h, s, ray) => {\n\t\t\tif (s.type == \"enemy\" && !ray)\tconsole.log(x, y, w, h)\n\t\t\tif (x < 0 || x > game.c_wid - w || y < 0 || y > game.c_hei - h) return 4;\n\n\t\t\ttry {\n\t\t\t\tgame.squares.forEach((e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.x <= x + w &&\n\t\t\t\t\t\te.x + game.vars.sq_w >= x &&\n\t\t\t\t\t\te.y <= y + h &&\n\t\t\t\t\t\te.y + game.vars.sq_h >= y\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (s.type == \"player\" && ray) game.handle_collision(s, e);\n\t\t\t\t\t\tthrow 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (ray || s.type == \"enemy\") {\n\t\t\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\t\t\tlet new_w = game.vars.enemies_radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - game.vars.enemies_radius,\n\t\t\t\t\t\t\tnew_y = e.y - game.vars.enemies_radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (s.type == \"player\") game.handle_collision(s, e);\n\t\t\t\t\t\t\tthrow 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (s.type == \"player\") {\n\t\t\t\t\tgame.coins.forEach((e) => {\n\t\t\t\t\t\tlet new_w = game.vars.coins_radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - game.vars.coins_radius,\n\t\t\t\t\t\t\tnew_y = e.y - game.vars.coins_radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tgame.handle_collision(s, e);\n\t\t\t\t\t\t\tthrow 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tgame.players.forEach((e) => {\n\t\t\t\t\tif (e.state) {\n\t\t\t\t\t\tlet new_w = game.vars.players_radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - game.vars.players_radius,\n\t\t\t\t\t\t\tnew_y = e.y - game.vars.players_radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (s.type == \"enemy\" || (s.type == \"player\" && ray))\n\t\t\t\t\t\t\t\tgame.handle_collision(s, e);\n\t\t\t\t\t\t\tthrow 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (c) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\t\tgame.continue = () => {\n\t\t\t//  coins\n\t\t\tctx.fillStyle = game.vars.coins_c;\n\t\t\tgame.coins.forEach((e) => {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(e.x, e.y, game.vars.coins_radius, 0, 2 * Math.PI);\n\t\t\t\tctx.fill();\n\t\t\t});\n\t\t\t//  squares\n\t\t\tgame.squares.forEach((e) => {\n\t\t\t\tctx.fillStyle = game.vars.main_c_rgb + ((1-(1/e.health))+0.2) + \")\";\n\t\t\t\tctx.fillRect(e.x, e.y, game.vars.sq_w, game.vars.sq_h);\n\t\t\t});\n\t\t\t//  enemies\n\t\t\tctx.strokeStyle = game.vars.main_c;\n\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\tctx.fillStyle = game.vars.main_c\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(e.x, e.y, game.vars.enemies_radius, e.max_health - e.health, 2 * Math.PI);\n\t\t\t\tif (e.mode) ctx.fill();\n\t\t\t\telse {\n\t\t\t\t\tctx.fillStyle = game.vars.main_b;\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t\t//  enemy direction\n\t\t\t\tlet ray_x =\n\t\t\t\t\te.x +\n\t\t\t\t\t(e.dir_x < 0 ? -(game.vars.enemies_radius / 3) : e.dir_x > 0 ? game.vars.enemies_radius / 3 : 0),\n\t\t\t\t\tray_y =\n\t\t\t\t\te.y +\n\t\t\t\t\t(e.dir_y < 0 ? -(game.vars.enemies_radius / 3) : e.dir_y > 0 ? game.vars.enemies_radius / 3 : 0),\n\t\t\t\t\tcatcher = 0;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(ray_x, ray_y, game.vars.enemies_radius / 3, 0, 2 * Math.PI);\n\t\t\t\tctx.fillStyle = e.mode ? game.vars.main_b : game.vars.main_c;\n\t\t\t\tctx.fill();\n\t\t\t\t// enemy ray\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(ray_x, ray_y);\n\t\t\t\twhile (\n\t\t\t\t\tcatcher < game.c_wid &&\n\t\t\t\t\tgame.collided(ray_x, ray_y, 1, 1, e, true) == 0\n\t\t\t\t) {\n\t\t\t\t\tray_x += 2 * e.dir_x;\n\t\t\t\t\tray_y += 2 * e.dir_y;\n\t\t\t\t\tcatcher++;\n\t\t\t\t}\n\t\t\t\tctx.lineTo(ray_x, ray_y);\n\t\t\t\tctx.stroke();\n\t\t\t});\n\t\t\t//  players\n\t\t\tctx.strokeStyle = game.vars.ps_c;\n\t\t\tgame.players.forEach((e) => {\n\t\t\t\tif (e.state) {\n\t\t\t\t\tlet x_ray =\n\t\t\t\t\t\te.x +\n\t\t\t\t\t\t(e.dir_x < 0 ? -(game.vars.players_radius / 3) : e.dir_x > 0 ? game.vars.players_radius / 3 : 0),\n\t\t\t\t\t\ty_ray =\n\t\t\t\t\t\te.y +\n\t\t\t\t\t\t(e.dir_y < 0 ? -(game.vars.players_radius / 3) : e.dir_y > 0 ? game.vars.players_radius / 3 : 0),\n\t\t\t\t\t\tcatcher = 0;\n\t\t\t\t\t//  player itself\n\t\t\t\t\tctx.fillStyle = game.vars.ps_c;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(e.x, e.y, game.vars.players_radius, e.max_health - e.health, 2 * Math.PI);\n\t\t\t\t\te.mode ? ctx.fill() : ctx.stroke();\n\t\t\t\t\t//  player direction\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(x_ray, y_ray, game.vars.players_radius / 3, 0, 2 * Math.PI);\n\t\t\t\t\tctx.fillStyle = (e.mode ? game.vars.main_b : game.vars.ps_c);\n\n\t\t\t\t\tctx.fill();\n\t\t\t\t\t//  player shoot\n\t\t\t\t\tif (e.shooting > 0) {\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo(x_ray, y_ray);\n\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\tcatcher < game.c_wid &&\n\t\t\t\t\t\t\tgame.collided(x_ray, y_ray, 1, 1, e, e.shooting == 1) == 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tx_ray += (2 * e.dir_x);\n\t\t\t\t\t\t\ty_ray += (2 * e.dir_y);\n\t\t\t\t\t\t\tcatcher++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.lineTo(x_ray, y_ray);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\te.shooting += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (e.shooting > 2)\n\t\t\t\t\t\te.shooting = 0;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tgame.moveEnemies = () => {\n\t\t\tif (game.vars.enemies_c_f < game.vars.enemies_MpF)\n\t\t\t\tgame.vars.enemies_c_f++;\n\t\t\telse {\n\t\t\t\tlet new_x, new_y;\n\t\t\t\tgame.vars.enemies_c_f = 0;\n\t\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\t\tnew_x = e.x + 5 * e.dir_x;\n\t\t\t\t\tnew_y = e.y + 5 * e.dir_y;\n\t\t\t\t\tif (\n\t\t\t\t\t\tgame.collided(\n\t\t\t\t\t\t\tnew_x - game.vars.enemies_radius,\n\t\t\t\t\t\t\tnew_y - game.vars.enemies_radius,\n\t\t\t\t\t\t\tgame.vars.enemies_radius * 2,\n\t\t\t\t\t\t\tgame.vars.enemies_radius * 2,\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t) != 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet new_dir_x, new_dir_y;\n\t\t\t\t\t\tnew_dir_x = rand_num(-1, 1);\n\t\t\t\t\t\twhile ((new_dir_y = rand_num(-1, 1)) == e.dir_y);\n\t\t\t\t\t\te.dir_x = new_dir_x;\n\t\t\t\t\t\te.dir_y = !new_dir_y && !new_dir_x ? (rand_num(0, 1) ? -1 : 1) : new_dir_y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te.x = new_x;\n\t\t\t\t\t\te.y = new_y;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tgame.movePlayer = code => {\n\t\t\tlet p_index = 20,new_x, new_y, p_radius, p;\n\t\t\tif (game.players.length > 0 && game.players[0].state && (code <= 40 && code >= 37 || code == 13)) {\n\t\t\t\tp = 0;\n\t\t\t\tif (code == 13) {\n\t\t\t\t\tgame.players[p].shooting = 1;\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tgame.players[p].dir_x = code == 37 ? -1 : code == 39 ? 1 : 0;\n\t\t\t\tgame.players[p].dir_y = code == 38 ? -1 : code == 40 ? 1 : 0;\n\t\t\t}\n\t\t\telse if (game.players.length > 1 && game.players[1].state\n\t\t\t\t&& (code == 32 || code == 65 || code == 83 || code == 68 || code == 87)) {\n\t\t\t\tp = 1;\n\t\t\t\tif (code == 32) {\n\t\t\t\t\tgame.players[p].shooting = 1;\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tgame.players[p].dir_x = code == 65 ? -1 : code == 68 ? 1 : 0;\n\t\t\t\tgame.players[p].dir_y = code == 87 ? -1 : code == 83 ? 1 : 0;\n\t\t\t}\n\t\t\telse return;\n\t\t\tp_radius = game.vars.players_radius;\n\t\t\tnew_x = game.players[p].x + p_index * game.players[p].dir_x;\n\t\t\tnew_y = game.players[p].y + p_index * game.players[p].dir_y;\n\t\t\twhile (\n\t\t\t\tp_index >= 0 &&\n\t\t\t\tgame.collided(\n\t\t\t\t\tnew_x - p_radius,\n\t\t\t\t\tnew_y - p_radius,\n\t\t\t\t\tp_radius * 2,\n\t\t\t\t\tp_radius * 2,\n\t\t\t\t\tgame.players[p],\n\t\t\t\t\tfalse\n\t\t\t\t) != 0\n\t\t\t) {\n\t\t\t\tnew_x = game.players[p].x + p_index * game.players[p].dir_x;\n\t\t\t\tnew_y = game.players[p].y + p_index * game.players[p].dir_y;\n\t\t\t\tp_index -= 2;\n\t\t\t}\n\t\t\tgame.players[p].x = new_x;\n\t\t\tgame.players[p].y = new_y;\n\t\t}\n\n\t\tgame.send_updates = () => {\n\t\t\tprops.send_update(\"game update\", JSON.stringify({\n\t\t\t\tstate: game_state,\n\t\t\t\tcurrent_players: current_players,\n\t\t\t\tplayers: game.players,\n\t\t\t\tenemies: game.enemies,\n\t\t\t\tcoins: game.coins,\n\t\t\t\tsquares: game.squares,\n\t\t\t\tlog: props.log,\n\t\t\t}), 'guest')\n\t\t}\n\n\t\tgame.pause = () => {\n\t\t\tctx.fillStyle = game.vars.main_c;\n\t\t\tlet   pause = \"PAUSE\";\n\t\t\tctx.fillText(pause, game.c_wid/2 - pause.length , game.c_hei / 2);\n\t\t};\n\n\t\tgame.end = () => {\n\t\t\tctx.fillStyle = game.vars.main_c;\n\t\t\tlet   over = \"GAME OVER\",\n\t\t\t\twinner = game.players[0].coins > game.players[1].coins ? \"PLAYER 1\"\n\t\t\t\t: (game.players[0].coins < game.players[1].coins ? \"PLAYER 2\" : \"NO ONE\");\n\t\t\twinner += \" WON\";\n\t\t\tctx.fillText(over, game.c_wid/2 - (over.length/2)*10, game.c_hei/2);\n\t\t\tctx.fillText(winner, game.c_wid/2 - (winner.length/2)*10, (game.c_hei/2) + 30);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tgame.squares = new Array();\n\t\t\t\tgame.enemies = new Array();\n\t\t\t\tgame.coins = new Array();\n\t\t\t\tgame.players = new Array();\n\t\t\t\tgame_state = -1;\n\t\t\t\tprops.setState(game_state);\n\t\t\t\tprops.toggle();\n\t\t\t}, 3000)\n\t\t};\n\n\t\twindow.onresize = a => {\n\t\t\tgame.c_wid = canvas.width = wrapper.offsetWidth;\n\t\t\tgame.c_hei = canvas.height = window.innerHeight / 2;\n\t\t\tcanvas.style.width = game.c_wid + \"px\";\n\t\t\tcanvas.style.height = game.c_hei + \"px\";\n\t\t\tgame.vars.sq_w = game.c_hei / 10;\n\t\t\tgame.vars.sq_h = game.c_hei / 10;\n\t\t};\n\n\t\tgame.draw = () => {\n\t\t\tctx.clearRect(0, 0, game.c_wid, game.c_hei);\n\t\t\tctx.font = \"20px monospace\";\n\t\t\tctx.lineWidth = \"2\";\n\n\t\t\tswitch (game_state) {\n\t\t\t\tcase 0:\n\t\t\t\t\tgame.initiate();\n\t\t\t\t\twindow.onkeydown = (e) => game.movePlayer(e.keyCode);\n\t\t\t\t\tgame_state = 3;\n\t\t\t\t\tprops.setState(game_state);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tgame.pause();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tgame.end();\n\t\t\t\t\tbreak;\n\t\t\t\tcase -1:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tgame.moveEnemies();\n\t\t\t\t\tgame.send_updates();\n\t\t\t\t\tgame.continue();\n\t\t\t}\n\t\t\trequestAnimationFrame(game.draw);\n\t\t};\n\t\trequestAnimationFrame(game.draw);\n\t}, []);\n\tgame_state = props.state;\n\tcurrent_players = props.players;\n\treturn <canvas id=\"canvas\" className=\"off\" >something is wrong</canvas>;\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}