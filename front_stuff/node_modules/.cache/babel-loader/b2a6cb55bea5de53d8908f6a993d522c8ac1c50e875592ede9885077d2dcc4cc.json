{"ast":null,"code":"var _jsxFileName = \"/Users/beddinao/cursus-0/trancendance/new_stuff/front_shit/src/game.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar canvas,\n  ctx,\n  wrapper,\n  game_state,\n  current_players,\n  game = [];\nvar Game = props => {\n  _s();\n  useEffect(() => {\n    canvas = document.getElementById(\"canvas\");\n    ctx = canvas.getContext(\"2d\");\n    wrapper = document.getElementById(\"wrapper\");\n    game.c_wid = canvas.width = wrapper.offsetWidth;\n    game.c_hei = canvas.height = window.innerHeight / 2;\n    game_state = props.state;\n    game.vars = {\n      sq_w: game.c_hei / 10,\n      sq_h: game.c_hei / 10,\n      main_c: \"#e5e5e5\",\n      main_c_rgb: \"rgb(141, 153, 174, \",\n      main_b: \"#000\",\n      ps_c: \"#fca311\",\n      coins_c: \"#0582ca\",\n      enemies_MpF: 4,\n      enemies_c_f: 0\n    };\n    game.squares = new Array();\n    game.enemies = new Array();\n    game.coins = new Array();\n    game.players = new Array();\n    var rand_num = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    };\n    game.initiate = () => {\n      let a,\n        b,\n        c,\n        d,\n        p = true;\n      for (let i = 0; i < game.c_wid - 1; i += game.vars.sq_w) {\n        for (let j = 0; j < game.c_hei - 1 && rand_num(0, i / 3); j += game.vars.sq_h) {\n          d = game.players.length < current_players && (p || i > game.c_wid / 2);\n          a = !d && (game.squares.length < 20 || rand_num(0, 1));\n          b = !d && !a && game.enemies.length < props.enemies && !rand_num(0, 5);\n          c = !d && !a && !b && game.coins.length < props.coins && !rand_num(0, 5);\n          if (a) game.squares.push({\n            x: i,\n            y: j,\n            w: game.vars.sq_w,\n            h: game.vars.sq_h,\n            type: \"wall\",\n            health: rand_num(1, 5)\n          });else if (b) {\n            b = game.vars.sq_w / 3;\n            game.enemies.push({\n              x: i + b,\n              y: j + b,\n              radius: Math.floor(b / 1.5),\n              mode: !(game.enemies.length % 2),\n              dir_x: rand_num(0, 1) ? -1 : 1,\n              dir_y: rand_num(0, 1) ? -1 : 1,\n              type: \"enemy\",\n              health: !(game.enemies.length % 2) ? 4 : 8,\n              max_health: !(game.enemies.length % 2) ? 4 : 8\n            });\n          } else if (c) {\n            c = game.vars.sq_w / 8;\n            game.coins.push({\n              x: i + game.vars.sq_w / 2,\n              y: j + game.vars.sq_h / 2,\n              radius: c,\n              type: \"coin\"\n            });\n          } else if (d) {\n            p = false;\n            d = game.vars.sq_w / 2;\n            game.players.push({\n              x: i + d,\n              y: j + d,\n              radius: Math.floor(game.vars.sq_w / 5),\n              mode: game.players.length,\n              dir_x: rand_num(-1, 1),\n              dir_y: rand_num(-1, 1),\n              shooting: 0,\n              type: \"player\",\n              state: 1,\n              coins: 0,\n              health: 5,\n              max_health: 3\n            });\n            //}\n          }\n        }\n      }\n    };\n    game.handle_collision = (cause, target) => {\n      let color = game.vars.main_c,\n        update = 0,\n        log;\n      if (target.type == \"wall\") {\n        log = \"hit wall, \";\n        target.health -= 1;\n        if (!target.health) {\n          game.squares.splice(game.squares.indexOf(target), 1);\n          log += \"destroyed\";\n        } else log += \"health: \" + target.health;\n      } else if (target.type == \"enemy\") {\n        log = \"hit enemy, \";\n        target.health -= 1;\n        if (!target.health) {\n          game.enemies.splice(game.enemies.indexOf(target), 1);\n          cause.coins += 2;\n          update = 1;\n          log += \"(got them +2)\";\n          color = game.vars.ps_c;\n        } else log += \", health: \" + target.health;\n      } else if (target.type == \"player\") {\n        log = \"player got hit \";\n        update = 2;\n        target.health -= 1;\n        if (!target.health) {\n          game.players[game.players.indexOf(target)].state = 0;\n          current_players--;\n          log += \" and destroyed \";\n          if (!current_players) {\n            log += \", ending game\";\n            game_state = 2;\n            props.setState(game_state);\n          }\n          props.setPlayers(current_players);\n          color = \"red\";\n        } else log += target.health + \" more\";\n      } else if (target.type == \"coin\") {\n        log = \"got coin \";\n        game.coins.splice(game.coins.indexOf(target), 1);\n        cause.coins += 1;\n        color = game.vars.coins_c;\n        update = 1;\n        log += \"+1\";\n        if (game.coins.length == 0) {\n          game_state = 2;\n          props.setState(game_state);\n        }\n      }\n      if (update) {\n        if (update == 1) {\n          if (cause.mode == 0) props.p_1(cause.coins);else props.p_2(cause.coins);\n        } else {\n          if (target.mode == 0) props.p_1(target.coins);else props.p_2(target.coins);\n        }\n      }\n      let logs = props.log;\n      logs.push(/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: color\n        },\n        children: log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this));\n      props.setLogs(logs);\n    };\n    game.collided = (x, y, w, h, s, ray) => {\n      if (x < 0 || x > game.c_wid - w || y < 0 || y > game.c_hei - h) return 4;\n      try {\n        game.squares.forEach(e => {\n          if (e.x <= x + w && e.x + e.w >= x && e.y <= y + h && e.y + e.h >= y) {\n            if (s.type == \"player\" && ray) game.handle_collision(s, e);\n            throw 1;\n          }\n        });\n        if (ray || s.type == \"enemy\") {\n          game.enemies.forEach(e => {\n            let new_w = e.radius * 2,\n              new_x = e.x - e.radius,\n              new_y = e.y - e.radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              if (s.type == \"player\") game.handle_collision(s, e);\n              throw 2;\n            }\n          });\n        }\n        if (s.type == \"player\") {\n          game.coins.forEach(e => {\n            let new_w = e.radius * 2,\n              new_x = e.x - e.radius,\n              new_y = e.y - e.radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              game.handle_collision(s, e);\n              throw 3;\n            }\n          });\n        }\n        game.players.forEach(e => {\n          if (e.state) {\n            let new_w = e.radius * 2,\n              new_x = e.x - e.radius,\n              new_y = e.y - e.radius;\n            if (e != s && new_x < x + w && new_x + new_w > x && new_y < y + h && new_y + new_w > y) {\n              if (s.type == \"enemy\" || s.type == \"player\" && ray) game.handle_collision(s, e);\n              throw 3;\n            }\n          }\n        });\n      } catch (c) {\n        return c;\n      }\n      return 0;\n    };\n    game.continue = () => {\n      //  coins\n      ctx.fillStyle = game.vars.coins_c;\n      game.coins.forEach(e => {\n        ctx.beginPath();\n        ctx.arc(e.x, e.y, e.radius, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n      //  squares\n      game.squares.forEach(e => {\n        ctx.fillStyle = game.vars.main_c_rgb + (1 - 1 / e.health + 0.2) + \")\";\n        ctx.fillRect(e.x, e.y, e.w, e.h);\n      });\n      //  enemies\n      ctx.strokeStyle = game.vars.main_c;\n      game.enemies.forEach(e => {\n        ctx.fillStyle = game.vars.main_c;\n        ctx.beginPath();\n        ctx.arc(e.x, e.y, e.radius, e.max_health - e.health, 2 * Math.PI);\n        if (e.mode) ctx.fill();else {\n          ctx.fillStyle = game.vars.main_b;\n          ctx.fill();\n          ctx.stroke();\n        }\n        //  enemy direction\n        let ray_x = e.x + (e.dir_x < 0 ? -(e.radius / 3) : e.dir_x > 0 ? e.radius / 3 : 0),\n          ray_y = e.y + (e.dir_y < 0 ? -(e.radius / 3) : e.dir_y > 0 ? e.radius / 3 : 0),\n          catcher = 0;\n        ctx.beginPath();\n        ctx.arc(ray_x, ray_y, e.radius / 3, 0, 2 * Math.PI);\n        ctx.fillStyle = e.mode ? game.vars.main_b : game.vars.main_c;\n        ctx.fill();\n        // enemy ray\n        ctx.beginPath();\n        ctx.moveTo(ray_x, ray_y);\n        while (catcher < game.c_wid && game.collided(ray_x, ray_y, 1, 1, e, true) == 0) {\n          ray_x += 2 * e.dir_x;\n          ray_y += 2 * e.dir_y;\n          catcher++;\n        }\n        ctx.lineTo(ray_x, ray_y);\n        ctx.stroke();\n      });\n      //  players\n      ctx.strokeStyle = game.vars.ps_c;\n      game.players.forEach(e => {\n        if (e.state) {\n          let x_ray = e.x + (e.dir_x < 0 ? -(e.radius / 3) : e.dir_x > 0 ? e.radius / 3 : 0),\n            y_ray = e.y + (e.dir_y < 0 ? -(e.radius / 3) : e.dir_y > 0 ? e.radius / 3 : 0),\n            catcher = 0;\n          //  player itself\n          ctx.fillStyle = game.vars.ps_c;\n          ctx.beginPath();\n          ctx.arc(e.x, e.y, e.radius, e.max_health - e.health, 2 * Math.PI);\n          e.mode ? ctx.fill() : ctx.stroke();\n          //  player direction\n          ctx.beginPath();\n          ctx.arc(x_ray, y_ray, e.radius / 3, 0, 2 * Math.PI);\n          ctx.fillStyle = e.mode ? game.vars.main_b : game.vars.ps_c;\n          ctx.fill();\n          //  player shoot\n          if (e.shooting > 0) {\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(x_ray, y_ray);\n            while (catcher < game.c_wid && game.collided(x_ray, y_ray, 1, 1, e, e.shooting == 1) == 0) {\n              x_ray += 2 * e.dir_x;\n              y_ray += 2 * e.dir_y;\n              catcher++;\n            }\n            ctx.lineTo(x_ray, y_ray);\n            ctx.stroke();\n            e.shooting += 1;\n          }\n          if (e.shooting > 2) e.shooting = 0;\n        }\n      });\n    };\n    game.moveEnemies = () => {\n      if (game.vars.enemies_c_f < game.vars.enemies_MpF) game.vars.enemies_c_f++;else {\n        let new_x, new_y;\n        game.vars.enemies_c_f = 0;\n        game.enemies.forEach(e => {\n          new_x = e.x + 5 * e.dir_x;\n          new_y = e.y + 5 * e.dir_y;\n          if (game.collided(new_x - e.radius, new_y - e.radius, e.radius * 2, e.radius * 2, e, false) != 0) {\n            let new_dir_x, new_dir_y;\n            new_dir_x = rand_num(-1, 1);\n            while ((new_dir_y = rand_num(-1, 1)) == e.dir_y);\n            e.dir_x = new_dir_x;\n            e.dir_y = !new_dir_y && !new_dir_x ? rand_num(0, 1) ? -1 : 1 : new_dir_y;\n          } else {\n            e.x = new_x;\n            e.y = new_y;\n          }\n        });\n      }\n    };\n    game.movePlayer = code => {\n      let p_index = 20,\n        new_x,\n        new_y,\n        p_radius,\n        p;\n      if (game.players.length > 0 && game.players[0].state && (code <= 40 && code >= 37 || code == 13)) {\n        p = 0;\n        if (code == 13) {\n          game.players[p].shooting = 1;\n          return;\n        }\n        game.players[p].dir_x = code == 37 ? -1 : code == 39 ? 1 : 0;\n        game.players[p].dir_y = code == 38 ? -1 : code == 40 ? 1 : 0;\n      } else if (game.players.length > 1 && game.players[1].state && (code == 32 || code == 65 || code == 83 || code == 68 || code == 87)) {\n        p = 1;\n        if (code == 32) {\n          game.players[p].shooting = 1;\n          return;\n        }\n        game.players[p].dir_x = code == 65 ? -1 : code == 68 ? 1 : 0;\n        game.players[p].dir_y = code == 87 ? -1 : code == 83 ? 1 : 0;\n      } else return;\n      p_radius = game.players[p].radius;\n      new_x = game.players[p].x + p_index * game.players[p].dir_x;\n      new_y = game.players[p].y + p_index * game.players[p].dir_y;\n      while (p_index >= 0 && game.collided(new_x - p_radius, new_y - p_radius, p_radius * 2, p_radius * 2, game.players[p], false) != 0) {\n        new_x = game.players[p].x + p_index * game.players[p].dir_x;\n        new_y = game.players[p].y + p_index * game.players[p].dir_y;\n        p_index -= 2;\n      }\n      game.players[p].x = new_x;\n      game.players[p].y = new_y;\n    };\n    game.send_updates = () => {\n      props.send_update(\"game update\", JSON.stringify({\n        state: game_state,\n        current_players: current_players,\n        players: JSON.stringify(game.players),\n        enemies: JSON.stringify(game.enemies),\n        coins: JSON.stringify(game.coins),\n        squares: JSON.stringify(game.squares),\n        log: JSON.stringify(props.log)\n      }), 'guest');\n    };\n    game.pause = () => {\n      ctx.fillStyle = game.vars.main_c;\n      let pause = \"PAUSE\";\n      ctx.fillText(pause, game.c_wid / 2 - pause.length, game.c_hei / 2);\n    };\n    game.end = () => {\n      ctx.fillStyle = game.vars.main_c;\n      let over = \"GAME OVER\",\n        winner = game.players[0].coins > game.players[1].coins ? \"PLAYER 1\" : game.players[0].coins < game.players[1].coins ? \"PLAYER 2\" : \"NO ONE\";\n      winner += \" WON\";\n      ctx.fillText(over, game.c_wid / 2 - over.length / 2 * 10, game.c_hei / 2);\n      ctx.fillText(winner, game.c_wid / 2 - winner.length / 2 * 10, game.c_hei / 2 + 30);\n      setTimeout(() => {\n        game.squares = new Array();\n        game.enemies = new Array();\n        game.coins = new Array();\n        game.players = new Array();\n        game_state = -1;\n        props.setState(game_state);\n        props.toggle();\n      }, 3000);\n    };\n    window.onresize = a => {\n      game.c_wid = canvas.width = wrapper.offsetWidth;\n      game.c_hei = canvas.height = window.innerHeight / 2;\n      canvas.style.width = game.c_wid + \"px\";\n      canvas.style.height = game.c_hei + \"px\";\n      game.vars.sq_w = game.c_hei / 10;\n      game.vars.sq_h = game.c_hei / 10;\n    };\n    game.draw = () => {\n      ctx.clearRect(0, 0, game.c_wid, game.c_hei);\n      ctx.font = \"20px monospace\";\n      ctx.lineWidth = \"2\";\n      switch (game_state) {\n        case 0:\n          game.initiate();\n          window.onkeydown = e => game.movePlayer(e.keyCode);\n          game_state = 3;\n          props.setState(game_state);\n          break;\n        case 1:\n          game.pause();\n          break;\n        case 2:\n          game.end();\n          break;\n        case -1:\n          break;\n        default:\n          game.moveEnemies();\n          game.send_updates();\n          game.continue();\n      }\n      requestAnimationFrame(game.draw);\n    };\n    requestAnimationFrame(game.draw);\n  }, []);\n  game_state = props.state;\n  current_players = props.players;\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\",\n    className: \"off\",\n    children: \"something is wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","canvas","ctx","wrapper","game_state","current_players","game","Game","props","_s","document","getElementById","getContext","c_wid","width","offsetWidth","c_hei","height","window","innerHeight","state","vars","sq_w","sq_h","main_c","main_c_rgb","main_b","ps_c","coins_c","enemies_MpF","enemies_c_f","squares","Array","enemies","coins","players","rand_num","min","max","Math","floor","random","initiate","a","b","c","d","p","i","j","length","push","x","y","w","h","type","health","radius","mode","dir_x","dir_y","max_health","shooting","handle_collision","cause","target","color","update","log","splice","indexOf","setState","setPlayers","p_1","p_2","logs","style","children","fileName","_jsxFileName","lineNumber","columnNumber","setLogs","collided","s","ray","forEach","e","new_w","new_x","new_y","continue","fillStyle","beginPath","arc","PI","fill","fillRect","strokeStyle","stroke","ray_x","ray_y","catcher","moveTo","lineTo","x_ray","y_ray","lineWidth","moveEnemies","new_dir_x","new_dir_y","movePlayer","code","p_index","p_radius","send_updates","send_update","JSON","stringify","pause","fillText","end","over","winner","setTimeout","toggle","onresize","draw","clearRect","font","onkeydown","keyCode","requestAnimationFrame","id","className","_c","$RefreshReg$"],"sources":["/Users/beddinao/cursus-0/trancendance/new_stuff/front_shit/src/game.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nvar canvas,\n\tctx,\n\twrapper,\n\tgame_state,\n\tcurrent_players,\n\tgame = [];\n\nvar Game = (props) => {\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(\"canvas\");\n\t\tctx = canvas.getContext(\"2d\");\n\t\twrapper = document.getElementById(\"wrapper\");\n\t\tgame.c_wid = canvas.width = wrapper.offsetWidth;\n\t\tgame.c_hei = canvas.height = window.innerHeight / 2;\n\t\tgame_state = props.state;\n\n\t\tgame.vars = {\n\t\t\tsq_w: game.c_hei / 10,\n\t\t\tsq_h: game.c_hei / 10,\n\t\t\tmain_c: \"#e5e5e5\",\n\t\t\tmain_c_rgb : \"rgb(141, 153, 174, \",\n\t\t\tmain_b: \"#000\",\n\t\t\tps_c : \"#fca311\",\n\t\t\tcoins_c : \"#0582ca\",\n\t\t\tenemies_MpF: 4,\n\t\t\tenemies_c_f: 0,\n\t\t};\n\n\t\tgame.squares = new Array();\n\t\tgame.enemies = new Array();\n\t\tgame.coins = new Array();\n\t\tgame.players = new Array();\n\n\t\tvar rand_num = (min, max) => {\n\t\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\n\t\t};\n\n\t\tgame.initiate = () => {\n\t\t\tlet a, b, c, d, p=true;\n\t\t\tfor (let i = 0; i < game.c_wid - 1; i += game.vars.sq_w) {\n\t\t\t\tfor (\n\t\t\t\t\tlet j = 0;\n\t\t\t\t\tj < game.c_hei - 1 && rand_num(0, i / 3);\n\t\t\t\t\tj += game.vars.sq_h\n\t\t\t\t) {\n\t\t\t\t\td = game.players.length < current_players && (p || i > game.c_wid/2);\n\t\t\t\t\ta = !d && (game.squares.length < 20 || rand_num(0, 1));\n\t\t\t\t\tb = !d && !a && game.enemies.length < props.enemies && !rand_num(0, 5);\n\t\t\t\t\tc = !d && !a && !b && game.coins.length < props.coins && !rand_num(0, 5);\n\n\t\t\t\t\tif (a)\n\t\t\t\t\t\tgame.squares.push({\n\t\t\t\t\t\t\tx: i,\n\t\t\t\t\t\t\ty: j,\n\t\t\t\t\t\t\tw: game.vars.sq_w,\n\t\t\t\t\t\t\th: game.vars.sq_h,\n\t\t\t\t\t\t\ttype: \"wall\",\n\t\t\t\t\t\t\thealth : rand_num(1, 5),\n\t\t\t\t\t\t});\n\t\t\t\t\telse if (b) {\n\t\t\t\t\t\tb = game.vars.sq_w / 3;\n\t\t\t\t\t\tgame.enemies.push({\n\t\t\t\t\t\t\tx: i + b,\n\t\t\t\t\t\t\ty: j + b,\n\t\t\t\t\t\t\tradius: Math.floor(b / 1.5),\n\t\t\t\t\t\t\tmode: !(game.enemies.length % 2),\n\t\t\t\t\t\t\tdir_x: rand_num(0, 1) ? -1 : 1,\n\t\t\t\t\t\t\tdir_y: rand_num(0, 1) ? -1 : 1,\n\t\t\t\t\t\t\ttype: \"enemy\",\n\t\t\t\t\t\t\thealth : !(game.enemies.length % 2) ? 4 : 8,\n\t\t\t\t\t\t\tmax_health : !(game.enemies.length % 2) ? 4 : 8,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (c) {\n\t\t\t\t\t\tc = game.vars.sq_w / 8;\n\t\t\t\t\t\tgame.coins.push({\n\t\t\t\t\t\t\tx: i + game.vars.sq_w / 2,\n\t\t\t\t\t\t\ty: j + game.vars.sq_h / 2,\n\t\t\t\t\t\t\tradius: c,\n\t\t\t\t\t\t\ttype: \"coin\",\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (d) {\n\t\t\t\t\t\tp = false;\n\t\t\t\t\t\td = game.vars.sq_w / 2;\n\t\t\t\t\t\tgame.players.push({\n\t\t\t\t\t\t\tx: i + d,\n\t\t\t\t\t\t\ty: j + d,\n\t\t\t\t\t\t\tradius: Math.floor(game.vars.sq_w / 5),\n\t\t\t\t\t\t\tmode: game.players.length,\n\t\t\t\t\t\t\tdir_x: rand_num(-1, 1),\n\t\t\t\t\t\t\tdir_y: rand_num(-1, 1),\n\t\t\t\t\t\t\tshooting: 0,\n\t\t\t\t\t\t\ttype: \"player\",\n\t\t\t\t\t\t\tstate: 1,\n\t\t\t\t\t\t\tcoins: 0,\n\t\t\t\t\t\t\thealth : 5,\n\t\t\t\t\t\t\tmax_health : 3,\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tgame.handle_collision = (cause, target) => {\n\t\t\tlet color = game.vars.main_c, update = 0 ,\n\t\t\t\tlog;\n\n\t\t\tif (target.type == \"wall\") {\n\t\t\t\tlog = \"hit wall, \"\n\t\t\t\ttarget.health -= 1;\n\t\t\t\tif (!target.health) {\n\t\t\t\t\tgame.squares.splice(game.squares.indexOf(target), 1);\n\t\t\t\t\tlog += \"destroyed\"\n\t\t\t\t}\n\t\t\t\telse log += \"health: \" + target.health\n\t\t\t}\n\t\t\telse if (target.type == \"enemy\") {\n\t\t\t\tlog = \"hit enemy, \"\n\t\t\t\ttarget.health -= 1;\n\t\t\t\tif (!target.health) {\n\t\t\t\t\tgame.enemies.splice(game.enemies.indexOf(target), 1);\n\t\t\t\t\tcause.coins += 2;\n\t\t\t\t\tupdate = 1;\n\t\t\t\t\tlog += \"(got them +2)\"\n\t\t\t\t\tcolor = game.vars.ps_c;\n\t\t\t\t}\n\t\t\t\telse log += \", health: \" + target.health;\n\t\t\t}\n\t\t\telse if (target.type == \"player\") {\n\t\t\t\tlog = \"player got hit \"\n\t\t\t\tupdate = 2;\n\t\t\t\ttarget.health -= 1;\n\t\t\t\tif (!target.health) {\n\t\t\t\t\tgame.players[game.players.indexOf(target)].state = 0;\n\t\t\t\t\tcurrent_players--;\n\t\t\t\t\tlog += \" and destroyed \"\n\t\t\t\t\tif (!current_players) {\n\t\t\t\t\t\tlog += \", ending game\"\n\t\t\t\t\t\tgame_state = 2;\n\t\t\t\t\t\tprops.setState(game_state);\n\t\t\t\t\t}\n\t\t\t\t\tprops.setPlayers(current_players);\n\t\t\t\t\tcolor = \"red\";\n\t\t\t\t}\n\t\t\t\telse log += target.health + \" more\"\n\t\t\t} else if (target.type == \"coin\") {\n\t\t\t\tlog = \"got coin \"\n\t\t\t\tgame.coins.splice(game.coins.indexOf(target), 1);\n\t\t\t\tcause.coins += 1;\n\t\t\t\tcolor = game.vars.coins_c;\n\t\t\t\tupdate = 1;\n\t\t\t\tlog += \"+1\"\n\t\t\t\tif (game.coins.length == 0) {\n\t\t\t\t\tgame_state = 2;\n\t\t\t\t\tprops.setState(game_state);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (update) {\n\t\t\t\tif (update == 1) {\n\t\t\t\t\tif (cause.mode == 0) props.p_1(cause.coins);\n\t\t\t\t\telse props.p_2(cause.coins);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (target.mode == 0) props.p_1(target.coins);\n\t\t\t\t\telse props.p_2(target.coins);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet logs = props.log;\n\t\t\tlogs.push(\n\t\t\t\t<p style={{ color: color }}>\n\t\t\t\t{log}\n\t\t\t\t</p>\n\t\t\t);\n\n\t\t\tprops.setLogs(logs);\n\t\t};\n\n\t\tgame.collided = (x, y, w, h, s, ray) => {\n\t\t\tif (x < 0 || x > game.c_wid - w || y < 0 || y > game.c_hei - h) return 4;\n\n\t\t\ttry {\n\t\t\t\tgame.squares.forEach((e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.x <= x + w &&\n\t\t\t\t\t\te.x + e.w >= x &&\n\t\t\t\t\t\te.y <= y + h &&\n\t\t\t\t\t\te.y + e.h >= y\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (s.type == \"player\" && ray) game.handle_collision(s, e);\n\t\t\t\t\t\tthrow 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (ray || s.type == \"enemy\") {\n\t\t\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\t\t\tlet new_w = e.radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - e.radius,\n\t\t\t\t\t\t\tnew_y = e.y - e.radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (s.type == \"player\") game.handle_collision(s, e);\n\t\t\t\t\t\t\tthrow 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (s.type == \"player\") {\n\t\t\t\t\tgame.coins.forEach((e) => {\n\t\t\t\t\t\tlet new_w = e.radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - e.radius,\n\t\t\t\t\t\t\tnew_y = e.y - e.radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tgame.handle_collision(s, e);\n\t\t\t\t\t\t\tthrow 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tgame.players.forEach((e) => {\n\t\t\t\t\tif (e.state) {\n\t\t\t\t\t\tlet new_w = e.radius * 2,\n\t\t\t\t\t\t\tnew_x = e.x - e.radius,\n\t\t\t\t\t\t\tnew_y = e.y - e.radius;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te != s &&\n\t\t\t\t\t\t\tnew_x < x + w &&\n\t\t\t\t\t\t\tnew_x + new_w > x &&\n\t\t\t\t\t\t\tnew_y < y + h &&\n\t\t\t\t\t\t\tnew_y + new_w > y\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (s.type == \"enemy\" || (s.type == \"player\" && ray))\n\t\t\t\t\t\t\t\tgame.handle_collision(s, e);\n\t\t\t\t\t\t\tthrow 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (c) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\t\tgame.continue = () => {\n\t\t\t//  coins\n\t\t\tctx.fillStyle = game.vars.coins_c;\n\t\t\tgame.coins.forEach((e) => {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(e.x, e.y, e.radius, 0, 2 * Math.PI);\n\t\t\t\tctx.fill();\n\t\t\t});\n\t\t\t//  squares\n\t\t\tgame.squares.forEach((e) => {\n\t\t\t\tctx.fillStyle = game.vars.main_c_rgb + ((1-(1/e.health))+0.2) + \")\";\n\t\t\t\tctx.fillRect(e.x, e.y, e.w, e.h);\n\t\t\t});\n\t\t\t//  enemies\n\t\t\tctx.strokeStyle = game.vars.main_c;\n\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\tctx.fillStyle = game.vars.main_c\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(e.x, e.y, e.radius, e.max_health - e.health, 2 * Math.PI);\n\t\t\t\tif (e.mode) ctx.fill();\n\t\t\t\telse {\n\t\t\t\t\tctx.fillStyle = game.vars.main_b;\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t\t//  enemy direction\n\t\t\t\tlet ray_x =\n\t\t\t\t\te.x +\n\t\t\t\t\t(e.dir_x < 0 ? -(e.radius / 3) : e.dir_x > 0 ? e.radius / 3 : 0),\n\t\t\t\t\tray_y =\n\t\t\t\t\te.y +\n\t\t\t\t\t(e.dir_y < 0 ? -(e.radius / 3) : e.dir_y > 0 ? e.radius / 3 : 0),\n\t\t\t\t\tcatcher = 0;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(ray_x, ray_y, e.radius / 3, 0, 2 * Math.PI);\n\t\t\t\tctx.fillStyle = e.mode ? game.vars.main_b : game.vars.main_c;\n\t\t\t\tctx.fill();\n\t\t\t\t// enemy ray\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(ray_x, ray_y);\n\t\t\t\twhile (\n\t\t\t\t\tcatcher < game.c_wid &&\n\t\t\t\t\tgame.collided(ray_x, ray_y, 1, 1, e, true) == 0\n\t\t\t\t) {\n\t\t\t\t\tray_x += 2 * e.dir_x;\n\t\t\t\t\tray_y += 2 * e.dir_y;\n\t\t\t\t\tcatcher++;\n\t\t\t\t}\n\t\t\t\tctx.lineTo(ray_x, ray_y);\n\t\t\t\tctx.stroke();\n\t\t\t});\n\t\t\t//  players\n\t\t\tctx.strokeStyle = game.vars.ps_c;\n\t\t\tgame.players.forEach((e) => {\n\t\t\t\tif (e.state) {\n\t\t\t\t\tlet x_ray =\n\t\t\t\t\t\te.x +\n\t\t\t\t\t\t(e.dir_x < 0 ? -(e.radius / 3) : e.dir_x > 0 ? e.radius / 3 : 0),\n\t\t\t\t\t\ty_ray =\n\t\t\t\t\t\te.y +\n\t\t\t\t\t\t(e.dir_y < 0 ? -(e.radius / 3) : e.dir_y > 0 ? e.radius / 3 : 0),\n\t\t\t\t\t\tcatcher = 0;\n\t\t\t\t\t//  player itself\n\t\t\t\t\tctx.fillStyle = game.vars.ps_c;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(e.x, e.y, e.radius, e.max_health - e.health, 2 * Math.PI);\n\t\t\t\t\te.mode ? ctx.fill() : ctx.stroke();\n\t\t\t\t\t//  player direction\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(x_ray, y_ray, e.radius / 3, 0, 2 * Math.PI);\n\t\t\t\t\tctx.fillStyle = (e.mode ? game.vars.main_b : game.vars.ps_c);\n\n\t\t\t\t\tctx.fill();\n\t\t\t\t\t//  player shoot\n\t\t\t\t\tif (e.shooting > 0) {\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo(x_ray, y_ray);\n\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\tcatcher < game.c_wid &&\n\t\t\t\t\t\t\tgame.collided(x_ray, y_ray, 1, 1, e, e.shooting == 1) == 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tx_ray += (2 * e.dir_x);\n\t\t\t\t\t\t\ty_ray += (2 * e.dir_y);\n\t\t\t\t\t\t\tcatcher++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.lineTo(x_ray, y_ray);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\te.shooting += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (e.shooting > 2)\n\t\t\t\t\t\te.shooting = 0;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tgame.moveEnemies = () => {\n\t\t\tif (game.vars.enemies_c_f < game.vars.enemies_MpF)\n\t\t\t\tgame.vars.enemies_c_f++;\n\t\t\telse {\n\t\t\t\tlet new_x, new_y;\n\t\t\t\tgame.vars.enemies_c_f = 0;\n\t\t\t\tgame.enemies.forEach((e) => {\n\t\t\t\t\tnew_x = e.x + 5 * e.dir_x;\n\t\t\t\t\tnew_y = e.y + 5 * e.dir_y;\n\t\t\t\t\tif (\n\t\t\t\t\t\tgame.collided(\n\t\t\t\t\t\t\tnew_x - e.radius,\n\t\t\t\t\t\t\tnew_y - e.radius,\n\t\t\t\t\t\t\te.radius * 2,\n\t\t\t\t\t\t\te.radius * 2,\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t) != 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet new_dir_x, new_dir_y;\n\t\t\t\t\t\tnew_dir_x = rand_num(-1, 1);\n\t\t\t\t\t\twhile ((new_dir_y = rand_num(-1, 1)) == e.dir_y);\n\t\t\t\t\t\te.dir_x = new_dir_x;\n\t\t\t\t\t\te.dir_y =\n\t\t\t\t\t\t\t!new_dir_y && !new_dir_x ? (rand_num(0, 1) ? -1 : 1) : new_dir_y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te.x = new_x;\n\t\t\t\t\t\te.y = new_y;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tgame.movePlayer = code => {\n\t\t\tlet p_index = 20,new_x, new_y, p_radius, p;\n\t\t\tif (game.players.length > 0 && game.players[0].state && (code <= 40 && code >= 37 || code == 13)) {\n\t\t\t\tp = 0;\n\t\t\t\tif (code == 13) {\n\t\t\t\t\tgame.players[p].shooting = 1;\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tgame.players[p].dir_x = code == 37 ? -1 : code == 39 ? 1 : 0;\n\t\t\t\tgame.players[p].dir_y = code == 38 ? -1 : code == 40 ? 1 : 0;\n\t\t\t}\n\t\t\telse if (game.players.length > 1 && game.players[1].state\n\t\t\t\t&& (code == 32 || code == 65 || code == 83 || code == 68 || code == 87)) {\n\t\t\t\tp = 1;\n\t\t\t\tif (code == 32) {\n\t\t\t\t\tgame.players[p].shooting = 1;\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tgame.players[p].dir_x = code == 65 ? -1 : code == 68 ? 1 : 0;\n\t\t\t\tgame.players[p].dir_y = code == 87 ? -1 : code == 83 ? 1 : 0;\n\t\t\t}\n\t\t\telse return;\n\t\t\tp_radius = game.players[p].radius;\n\t\t\tnew_x = game.players[p].x + p_index * game.players[p].dir_x;\n\t\t\tnew_y = game.players[p].y + p_index * game.players[p].dir_y;\n\t\t\twhile (\n\t\t\t\tp_index >= 0 &&\n\t\t\t\tgame.collided(\n\t\t\t\t\tnew_x - p_radius,\n\t\t\t\t\tnew_y - p_radius,\n\t\t\t\t\tp_radius * 2,\n\t\t\t\t\tp_radius * 2,\n\t\t\t\t\tgame.players[p],\n\t\t\t\t\tfalse\n\t\t\t\t) != 0\n\t\t\t) {\n\t\t\t\tnew_x = game.players[p].x + p_index * game.players[p].dir_x;\n\t\t\t\tnew_y = game.players[p].y + p_index * game.players[p].dir_y;\n\t\t\t\tp_index -= 2;\n\t\t\t}\n\t\t\tgame.players[p].x = new_x;\n\t\t\tgame.players[p].y = new_y;\n\t\t}\n\n\t\tgame.send_updates = () => {\n\t\t\tprops.send_update(\"game update\", JSON.stringify({\n\t\t\t\tstate: game_state,\n\t\t\t\tcurrent_players: current_players,\n\t\t\t\tplayers: JSON.stringify(game.players),\n\t\t\t\tenemies: JSON.stringify(game.enemies),\n\t\t\t\tcoins: JSON.stringify(game.coins),\n\t\t\t\tsquares: JSON.stringify(game.squares),\n\t\t\t\tlog: JSON.stringify(props.log),\n\t\t\t}), 'guest')\n\t\t}\n\n\t\tgame.pause = () => {\n\t\t\tctx.fillStyle = game.vars.main_c;\n\t\t\tlet   pause = \"PAUSE\";\n\t\t\tctx.fillText(pause, game.c_wid/2 - pause.length , game.c_hei / 2);\n\t\t};\n\n\t\tgame.end = () => {\n\t\t\tctx.fillStyle = game.vars.main_c;\n\t\t\tlet   over = \"GAME OVER\",\n\t\t\t\twinner = game.players[0].coins > game.players[1].coins ? \"PLAYER 1\"\n\t\t\t\t: (game.players[0].coins < game.players[1].coins ? \"PLAYER 2\" : \"NO ONE\");\n\t\t\twinner += \" WON\";\n\t\t\tctx.fillText(over, game.c_wid/2 - (over.length/2)*10, game.c_hei/2);\n\t\t\tctx.fillText(winner, game.c_wid/2 - (winner.length/2)*10, (game.c_hei/2) + 30);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tgame.squares = new Array();\n\t\t\t\tgame.enemies = new Array();\n\t\t\t\tgame.coins = new Array();\n\t\t\t\tgame.players = new Array();\n\t\t\t\tgame_state = -1;\n\t\t\t\tprops.setState(game_state);\n\t\t\t\tprops.toggle();\n\t\t\t}, 3000)\n\t\t};\n\n\t\twindow.onresize = a => {\n\t\t\tgame.c_wid = canvas.width = wrapper.offsetWidth;\n\t\t\tgame.c_hei = canvas.height = window.innerHeight / 2;\n\t\t\tcanvas.style.width = game.c_wid + \"px\";\n\t\t\tcanvas.style.height = game.c_hei + \"px\";\n\t\t\tgame.vars.sq_w = game.c_hei / 10;\n\t\t\tgame.vars.sq_h = game.c_hei / 10;\n\t\t};\n\n\t\tgame.draw = () => {\n\t\t\tctx.clearRect(0, 0, game.c_wid, game.c_hei);\n\t\t\tctx.font = \"20px monospace\";\n\t\t\tctx.lineWidth = \"2\";\n\n\t\t\tswitch (game_state) {\n\t\t\t\tcase 0:\n\t\t\t\t\tgame.initiate();\n\t\t\t\t\twindow.onkeydown = (e) => game.movePlayer(e.keyCode);\n\t\t\t\t\tgame_state = 3;\n\t\t\t\t\tprops.setState(game_state);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tgame.pause();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tgame.end();\n\t\t\t\t\tbreak;\n\t\t\t\tcase -1:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tgame.moveEnemies();\n\t\t\t\t\tgame.send_updates();\n\t\t\t\t\tgame.continue();\n\t\t\t}\n\t\t\trequestAnimationFrame(game.draw);\n\t\t};\n\t\trequestAnimationFrame(game.draw);\n\t}, []);\n\tgame_state = props.state;\n\tcurrent_players = props.players;\n\treturn <canvas id=\"canvas\" className=\"off\" >something is wrong</canvas>;\n};\n\nexport default Game;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,IAAIC,MAAM;EACTC,GAAG;EACHC,OAAO;EACPC,UAAU;EACVC,eAAe;EACfC,IAAI,GAAG,EAAE;AAEV,IAAIC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrBX,SAAS,CAAC,MAAM;IACfG,MAAM,GAAGS,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAC1CT,GAAG,GAAGD,MAAM,CAACW,UAAU,CAAC,IAAI,CAAC;IAC7BT,OAAO,GAAGO,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAC5CL,IAAI,CAACO,KAAK,GAAGZ,MAAM,CAACa,KAAK,GAAGX,OAAO,CAACY,WAAW;IAC/CT,IAAI,CAACU,KAAK,GAAGf,MAAM,CAACgB,MAAM,GAAGC,MAAM,CAACC,WAAW,GAAG,CAAC;IACnDf,UAAU,GAAGI,KAAK,CAACY,KAAK;IAExBd,IAAI,CAACe,IAAI,GAAG;MACXC,IAAI,EAAEhB,IAAI,CAACU,KAAK,GAAG,EAAE;MACrBO,IAAI,EAAEjB,IAAI,CAACU,KAAK,GAAG,EAAE;MACrBQ,MAAM,EAAE,SAAS;MACjBC,UAAU,EAAG,qBAAqB;MAClCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAG,SAAS;MAChBC,OAAO,EAAG,SAAS;MACnBC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE;IACd,CAAC;IAEDxB,IAAI,CAACyB,OAAO,GAAG,IAAIC,KAAK,CAAC,CAAC;IAC1B1B,IAAI,CAAC2B,OAAO,GAAG,IAAID,KAAK,CAAC,CAAC;IAC1B1B,IAAI,CAAC4B,KAAK,GAAG,IAAIF,KAAK,CAAC,CAAC;IACxB1B,IAAI,CAAC6B,OAAO,GAAG,IAAIH,KAAK,CAAC,CAAC;IAE1B,IAAII,QAAQ,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC5B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;IACzD,CAAC;IAED/B,IAAI,CAACoC,QAAQ,GAAG,MAAM;MACrB,IAAIC,CAAC;QAAEC,CAAC;QAAEC,CAAC;QAAEC,CAAC;QAAEC,CAAC,GAAC,IAAI;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,IAAI,CAACO,KAAK,GAAG,CAAC,EAAEmC,CAAC,IAAI1C,IAAI,CAACe,IAAI,CAACC,IAAI,EAAE;QACxD,KACC,IAAI2B,CAAC,GAAG,CAAC,EACTA,CAAC,GAAG3C,IAAI,CAACU,KAAK,GAAG,CAAC,IAAIoB,QAAQ,CAAC,CAAC,EAAEY,CAAC,GAAG,CAAC,CAAC,EACxCC,CAAC,IAAI3C,IAAI,CAACe,IAAI,CAACE,IAAI,EAClB;UACDuB,CAAC,GAAGxC,IAAI,CAAC6B,OAAO,CAACe,MAAM,GAAG7C,eAAe,KAAK0C,CAAC,IAAIC,CAAC,GAAG1C,IAAI,CAACO,KAAK,GAAC,CAAC,CAAC;UACpE8B,CAAC,GAAG,CAACG,CAAC,KAAKxC,IAAI,CAACyB,OAAO,CAACmB,MAAM,GAAG,EAAE,IAAId,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACtDQ,CAAC,GAAG,CAACE,CAAC,IAAI,CAACH,CAAC,IAAIrC,IAAI,CAAC2B,OAAO,CAACiB,MAAM,GAAG1C,KAAK,CAACyB,OAAO,IAAI,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;UACtES,CAAC,GAAG,CAACC,CAAC,IAAI,CAACH,CAAC,IAAI,CAACC,CAAC,IAAItC,IAAI,CAAC4B,KAAK,CAACgB,MAAM,GAAG1C,KAAK,CAAC0B,KAAK,IAAI,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;UAExE,IAAIO,CAAC,EACJrC,IAAI,CAACyB,OAAO,CAACoB,IAAI,CAAC;YACjBC,CAAC,EAAEJ,CAAC;YACJK,CAAC,EAAEJ,CAAC;YACJK,CAAC,EAAEhD,IAAI,CAACe,IAAI,CAACC,IAAI;YACjBiC,CAAC,EAAEjD,IAAI,CAACe,IAAI,CAACE,IAAI;YACjBiC,IAAI,EAAE,MAAM;YACZC,MAAM,EAAGrB,QAAQ,CAAC,CAAC,EAAE,CAAC;UACvB,CAAC,CAAC,CAAC,KACC,IAAIQ,CAAC,EAAE;YACXA,CAAC,GAAGtC,IAAI,CAACe,IAAI,CAACC,IAAI,GAAG,CAAC;YACtBhB,IAAI,CAAC2B,OAAO,CAACkB,IAAI,CAAC;cACjBC,CAAC,EAAEJ,CAAC,GAAGJ,CAAC;cACRS,CAAC,EAAEJ,CAAC,GAAGL,CAAC;cACRc,MAAM,EAAEnB,IAAI,CAACC,KAAK,CAACI,CAAC,GAAG,GAAG,CAAC;cAC3Be,IAAI,EAAE,EAAErD,IAAI,CAAC2B,OAAO,CAACiB,MAAM,GAAG,CAAC,CAAC;cAChCU,KAAK,EAAExB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;cAC9ByB,KAAK,EAAEzB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;cAC9BoB,IAAI,EAAE,OAAO;cACbC,MAAM,EAAG,EAAEnD,IAAI,CAAC2B,OAAO,CAACiB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;cAC3CY,UAAU,EAAG,EAAExD,IAAI,CAAC2B,OAAO,CAACiB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG;YAC/C,CAAC,CAAC;UACH,CAAC,MAAM,IAAIL,CAAC,EAAE;YACbA,CAAC,GAAGvC,IAAI,CAACe,IAAI,CAACC,IAAI,GAAG,CAAC;YACtBhB,IAAI,CAAC4B,KAAK,CAACiB,IAAI,CAAC;cACfC,CAAC,EAAEJ,CAAC,GAAG1C,IAAI,CAACe,IAAI,CAACC,IAAI,GAAG,CAAC;cACzB+B,CAAC,EAAEJ,CAAC,GAAG3C,IAAI,CAACe,IAAI,CAACE,IAAI,GAAG,CAAC;cACzBmC,MAAM,EAAEb,CAAC;cACTW,IAAI,EAAE;YACP,CAAC,CAAC;UACH,CAAC,MAAM,IAAIV,CAAC,EAAE;YACbC,CAAC,GAAG,KAAK;YACTD,CAAC,GAAGxC,IAAI,CAACe,IAAI,CAACC,IAAI,GAAG,CAAC;YACtBhB,IAAI,CAAC6B,OAAO,CAACgB,IAAI,CAAC;cACjBC,CAAC,EAAEJ,CAAC,GAAGF,CAAC;cACRO,CAAC,EAAEJ,CAAC,GAAGH,CAAC;cACRY,MAAM,EAAEnB,IAAI,CAACC,KAAK,CAAClC,IAAI,CAACe,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;cACtCqC,IAAI,EAAErD,IAAI,CAAC6B,OAAO,CAACe,MAAM;cACzBU,KAAK,EAAExB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;cACtByB,KAAK,EAAEzB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;cACtB2B,QAAQ,EAAE,CAAC;cACXP,IAAI,EAAE,QAAQ;cACdpC,KAAK,EAAE,CAAC;cACRc,KAAK,EAAE,CAAC;cACRuB,MAAM,EAAG,CAAC;cACVK,UAAU,EAAG;YACd,CAAC,CAAC;YACF;UACD;QACD;MACD;IACD,CAAC;IAEDxD,IAAI,CAAC0D,gBAAgB,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1C,IAAIC,KAAK,GAAG7D,IAAI,CAACe,IAAI,CAACG,MAAM;QAAE4C,MAAM,GAAG,CAAC;QACvCC,GAAG;MAEJ,IAAIH,MAAM,CAACV,IAAI,IAAI,MAAM,EAAE;QAC1Ba,GAAG,GAAG,YAAY;QAClBH,MAAM,CAACT,MAAM,IAAI,CAAC;QAClB,IAAI,CAACS,MAAM,CAACT,MAAM,EAAE;UACnBnD,IAAI,CAACyB,OAAO,CAACuC,MAAM,CAAChE,IAAI,CAACyB,OAAO,CAACwC,OAAO,CAACL,MAAM,CAAC,EAAE,CAAC,CAAC;UACpDG,GAAG,IAAI,WAAW;QACnB,CAAC,MACIA,GAAG,IAAI,UAAU,GAAGH,MAAM,CAACT,MAAM;MACvC,CAAC,MACI,IAAIS,MAAM,CAACV,IAAI,IAAI,OAAO,EAAE;QAChCa,GAAG,GAAG,aAAa;QACnBH,MAAM,CAACT,MAAM,IAAI,CAAC;QAClB,IAAI,CAACS,MAAM,CAACT,MAAM,EAAE;UACnBnD,IAAI,CAAC2B,OAAO,CAACqC,MAAM,CAAChE,IAAI,CAAC2B,OAAO,CAACsC,OAAO,CAACL,MAAM,CAAC,EAAE,CAAC,CAAC;UACpDD,KAAK,CAAC/B,KAAK,IAAI,CAAC;UAChBkC,MAAM,GAAG,CAAC;UACVC,GAAG,IAAI,eAAe;UACtBF,KAAK,GAAG7D,IAAI,CAACe,IAAI,CAACM,IAAI;QACvB,CAAC,MACI0C,GAAG,IAAI,YAAY,GAAGH,MAAM,CAACT,MAAM;MACzC,CAAC,MACI,IAAIS,MAAM,CAACV,IAAI,IAAI,QAAQ,EAAE;QACjCa,GAAG,GAAG,iBAAiB;QACvBD,MAAM,GAAG,CAAC;QACVF,MAAM,CAACT,MAAM,IAAI,CAAC;QAClB,IAAI,CAACS,MAAM,CAACT,MAAM,EAAE;UACnBnD,IAAI,CAAC6B,OAAO,CAAC7B,IAAI,CAAC6B,OAAO,CAACoC,OAAO,CAACL,MAAM,CAAC,CAAC,CAAC9C,KAAK,GAAG,CAAC;UACpDf,eAAe,EAAE;UACjBgE,GAAG,IAAI,iBAAiB;UACxB,IAAI,CAAChE,eAAe,EAAE;YACrBgE,GAAG,IAAI,eAAe;YACtBjE,UAAU,GAAG,CAAC;YACdI,KAAK,CAACgE,QAAQ,CAACpE,UAAU,CAAC;UAC3B;UACAI,KAAK,CAACiE,UAAU,CAACpE,eAAe,CAAC;UACjC8D,KAAK,GAAG,KAAK;QACd,CAAC,MACIE,GAAG,IAAIH,MAAM,CAACT,MAAM,GAAG,OAAO;MACpC,CAAC,MAAM,IAAIS,MAAM,CAACV,IAAI,IAAI,MAAM,EAAE;QACjCa,GAAG,GAAG,WAAW;QACjB/D,IAAI,CAAC4B,KAAK,CAACoC,MAAM,CAAChE,IAAI,CAAC4B,KAAK,CAACqC,OAAO,CAACL,MAAM,CAAC,EAAE,CAAC,CAAC;QAChDD,KAAK,CAAC/B,KAAK,IAAI,CAAC;QAChBiC,KAAK,GAAG7D,IAAI,CAACe,IAAI,CAACO,OAAO;QACzBwC,MAAM,GAAG,CAAC;QACVC,GAAG,IAAI,IAAI;QACX,IAAI/D,IAAI,CAAC4B,KAAK,CAACgB,MAAM,IAAI,CAAC,EAAE;UAC3B9C,UAAU,GAAG,CAAC;UACdI,KAAK,CAACgE,QAAQ,CAACpE,UAAU,CAAC;QAC3B;MACD;MAEA,IAAIgE,MAAM,EAAE;QACX,IAAIA,MAAM,IAAI,CAAC,EAAE;UAChB,IAAIH,KAAK,CAACN,IAAI,IAAI,CAAC,EAAEnD,KAAK,CAACkE,GAAG,CAACT,KAAK,CAAC/B,KAAK,CAAC,CAAC,KACvC1B,KAAK,CAACmE,GAAG,CAACV,KAAK,CAAC/B,KAAK,CAAC;QAC5B,CAAC,MACI;UACJ,IAAIgC,MAAM,CAACP,IAAI,IAAI,CAAC,EAAEnD,KAAK,CAACkE,GAAG,CAACR,MAAM,CAAChC,KAAK,CAAC,CAAC,KACzC1B,KAAK,CAACmE,GAAG,CAACT,MAAM,CAAChC,KAAK,CAAC;QAC7B;MACD;MAEA,IAAI0C,IAAI,GAAGpE,KAAK,CAAC6D,GAAG;MACpBO,IAAI,CAACzB,IAAI,cACRnD,OAAA;QAAG6E,KAAK,EAAE;UAAEV,KAAK,EAAEA;QAAM,CAAE;QAAAW,QAAA,EAC1BT;MAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACJ,CAAC;MAED1E,KAAK,CAAC2E,OAAO,CAACP,IAAI,CAAC;IACpB,CAAC;IAEDtE,IAAI,CAAC8E,QAAQ,GAAG,CAAChC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE8B,CAAC,EAAEC,GAAG,KAAK;MACvC,IAAIlC,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG9C,IAAI,CAACO,KAAK,GAAGyC,CAAC,IAAID,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG/C,IAAI,CAACU,KAAK,GAAGuC,CAAC,EAAE,OAAO,CAAC;MAExE,IAAI;QACHjD,IAAI,CAACyB,OAAO,CAACwD,OAAO,CAAEC,CAAC,IAAK;UAC3B,IACCA,CAAC,CAACpC,CAAC,IAAIA,CAAC,GAAGE,CAAC,IACZkC,CAAC,CAACpC,CAAC,GAAGoC,CAAC,CAAClC,CAAC,IAAIF,CAAC,IACdoC,CAAC,CAACnC,CAAC,IAAIA,CAAC,GAAGE,CAAC,IACZiC,CAAC,CAACnC,CAAC,GAAGmC,CAAC,CAACjC,CAAC,IAAIF,CAAC,EACb;YACD,IAAIgC,CAAC,CAAC7B,IAAI,IAAI,QAAQ,IAAI8B,GAAG,EAAEhF,IAAI,CAAC0D,gBAAgB,CAACqB,CAAC,EAAEG,CAAC,CAAC;YAC1D,MAAM,CAAC;UACR;QACD,CAAC,CAAC;QACF,IAAIF,GAAG,IAAID,CAAC,CAAC7B,IAAI,IAAI,OAAO,EAAE;UAC7BlD,IAAI,CAAC2B,OAAO,CAACsD,OAAO,CAAEC,CAAC,IAAK;YAC3B,IAAIC,KAAK,GAAGD,CAAC,CAAC9B,MAAM,GAAG,CAAC;cACvBgC,KAAK,GAAGF,CAAC,CAACpC,CAAC,GAAGoC,CAAC,CAAC9B,MAAM;cACtBiC,KAAK,GAAGH,CAAC,CAACnC,CAAC,GAAGmC,CAAC,CAAC9B,MAAM;YACvB,IACC8B,CAAC,IAAIH,CAAC,IACNK,KAAK,GAAGtC,CAAC,GAAGE,CAAC,IACboC,KAAK,GAAGD,KAAK,GAAGrC,CAAC,IACjBuC,KAAK,GAAGtC,CAAC,GAAGE,CAAC,IACboC,KAAK,GAAGF,KAAK,GAAGpC,CAAC,EAChB;cACD,IAAIgC,CAAC,CAAC7B,IAAI,IAAI,QAAQ,EAAElD,IAAI,CAAC0D,gBAAgB,CAACqB,CAAC,EAAEG,CAAC,CAAC;cACnD,MAAM,CAAC;YACR;UACD,CAAC,CAAC;QACH;QACA,IAAIH,CAAC,CAAC7B,IAAI,IAAI,QAAQ,EAAE;UACvBlD,IAAI,CAAC4B,KAAK,CAACqD,OAAO,CAAEC,CAAC,IAAK;YACzB,IAAIC,KAAK,GAAGD,CAAC,CAAC9B,MAAM,GAAG,CAAC;cACvBgC,KAAK,GAAGF,CAAC,CAACpC,CAAC,GAAGoC,CAAC,CAAC9B,MAAM;cACtBiC,KAAK,GAAGH,CAAC,CAACnC,CAAC,GAAGmC,CAAC,CAAC9B,MAAM;YACvB,IACC8B,CAAC,IAAIH,CAAC,IACNK,KAAK,GAAGtC,CAAC,GAAGE,CAAC,IACboC,KAAK,GAAGD,KAAK,GAAGrC,CAAC,IACjBuC,KAAK,GAAGtC,CAAC,GAAGE,CAAC,IACboC,KAAK,GAAGF,KAAK,GAAGpC,CAAC,EAChB;cACD/C,IAAI,CAAC0D,gBAAgB,CAACqB,CAAC,EAAEG,CAAC,CAAC;cAC3B,MAAM,CAAC;YACR;UACD,CAAC,CAAC;QACH;QACAlF,IAAI,CAAC6B,OAAO,CAACoD,OAAO,CAAEC,CAAC,IAAK;UAC3B,IAAIA,CAAC,CAACpE,KAAK,EAAE;YACZ,IAAIqE,KAAK,GAAGD,CAAC,CAAC9B,MAAM,GAAG,CAAC;cACvBgC,KAAK,GAAGF,CAAC,CAACpC,CAAC,GAAGoC,CAAC,CAAC9B,MAAM;cACtBiC,KAAK,GAAGH,CAAC,CAACnC,CAAC,GAAGmC,CAAC,CAAC9B,MAAM;YACvB,IACC8B,CAAC,IAAIH,CAAC,IACNK,KAAK,GAAGtC,CAAC,GAAGE,CAAC,IACboC,KAAK,GAAGD,KAAK,GAAGrC,CAAC,IACjBuC,KAAK,GAAGtC,CAAC,GAAGE,CAAC,IACboC,KAAK,GAAGF,KAAK,GAAGpC,CAAC,EAChB;cACD,IAAIgC,CAAC,CAAC7B,IAAI,IAAI,OAAO,IAAK6B,CAAC,CAAC7B,IAAI,IAAI,QAAQ,IAAI8B,GAAI,EACnDhF,IAAI,CAAC0D,gBAAgB,CAACqB,CAAC,EAAEG,CAAC,CAAC;cAC5B,MAAM,CAAC;YACR;UACD;QACD,CAAC,CAAC;MACH,CAAC,CAAC,OAAO3C,CAAC,EAAE;QACX,OAAOA,CAAC;MACT;MACA,OAAO,CAAC;IACT,CAAC;IAEDvC,IAAI,CAACsF,QAAQ,GAAG,MAAM;MACrB;MACA1F,GAAG,CAAC2F,SAAS,GAAGvF,IAAI,CAACe,IAAI,CAACO,OAAO;MACjCtB,IAAI,CAAC4B,KAAK,CAACqD,OAAO,CAAEC,CAAC,IAAK;QACzBtF,GAAG,CAAC4F,SAAS,CAAC,CAAC;QACf5F,GAAG,CAAC6F,GAAG,CAACP,CAAC,CAACpC,CAAC,EAAEoC,CAAC,CAACnC,CAAC,EAAEmC,CAAC,CAAC9B,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGnB,IAAI,CAACyD,EAAE,CAAC;QAC3C9F,GAAG,CAAC+F,IAAI,CAAC,CAAC;MACX,CAAC,CAAC;MACF;MACA3F,IAAI,CAACyB,OAAO,CAACwD,OAAO,CAAEC,CAAC,IAAK;QAC3BtF,GAAG,CAAC2F,SAAS,GAAGvF,IAAI,CAACe,IAAI,CAACI,UAAU,IAAK,CAAC,GAAE,CAAC,GAAC+D,CAAC,CAAC/B,MAAO,GAAE,GAAG,CAAC,GAAG,GAAG;QACnEvD,GAAG,CAACgG,QAAQ,CAACV,CAAC,CAACpC,CAAC,EAAEoC,CAAC,CAACnC,CAAC,EAAEmC,CAAC,CAAClC,CAAC,EAAEkC,CAAC,CAACjC,CAAC,CAAC;MACjC,CAAC,CAAC;MACF;MACArD,GAAG,CAACiG,WAAW,GAAG7F,IAAI,CAACe,IAAI,CAACG,MAAM;MAClClB,IAAI,CAAC2B,OAAO,CAACsD,OAAO,CAAEC,CAAC,IAAK;QAC3BtF,GAAG,CAAC2F,SAAS,GAAGvF,IAAI,CAACe,IAAI,CAACG,MAAM;QAChCtB,GAAG,CAAC4F,SAAS,CAAC,CAAC;QACf5F,GAAG,CAAC6F,GAAG,CAACP,CAAC,CAACpC,CAAC,EAAEoC,CAAC,CAACnC,CAAC,EAAEmC,CAAC,CAAC9B,MAAM,EAAE8B,CAAC,CAAC1B,UAAU,GAAG0B,CAAC,CAAC/B,MAAM,EAAE,CAAC,GAAGlB,IAAI,CAACyD,EAAE,CAAC;QACjE,IAAIR,CAAC,CAAC7B,IAAI,EAAEzD,GAAG,CAAC+F,IAAI,CAAC,CAAC,CAAC,KAClB;UACJ/F,GAAG,CAAC2F,SAAS,GAAGvF,IAAI,CAACe,IAAI,CAACK,MAAM;UAChCxB,GAAG,CAAC+F,IAAI,CAAC,CAAC;UACV/F,GAAG,CAACkG,MAAM,CAAC,CAAC;QACb;QACA;QACA,IAAIC,KAAK,GACRb,CAAC,CAACpC,CAAC,IACFoC,CAAC,CAAC5B,KAAK,GAAG,CAAC,GAAG,EAAE4B,CAAC,CAAC9B,MAAM,GAAG,CAAC,CAAC,GAAG8B,CAAC,CAAC5B,KAAK,GAAG,CAAC,GAAG4B,CAAC,CAAC9B,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;UAChE4C,KAAK,GACLd,CAAC,CAACnC,CAAC,IACFmC,CAAC,CAAC3B,KAAK,GAAG,CAAC,GAAG,EAAE2B,CAAC,CAAC9B,MAAM,GAAG,CAAC,CAAC,GAAG8B,CAAC,CAAC3B,KAAK,GAAG,CAAC,GAAG2B,CAAC,CAAC9B,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;UAChE6C,OAAO,GAAG,CAAC;QACZrG,GAAG,CAAC4F,SAAS,CAAC,CAAC;QACf5F,GAAG,CAAC6F,GAAG,CAACM,KAAK,EAAEC,KAAK,EAAEd,CAAC,CAAC9B,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGnB,IAAI,CAACyD,EAAE,CAAC;QACnD9F,GAAG,CAAC2F,SAAS,GAAGL,CAAC,CAAC7B,IAAI,GAAGrD,IAAI,CAACe,IAAI,CAACK,MAAM,GAAGpB,IAAI,CAACe,IAAI,CAACG,MAAM;QAC5DtB,GAAG,CAAC+F,IAAI,CAAC,CAAC;QACV;QACA/F,GAAG,CAAC4F,SAAS,CAAC,CAAC;QACf5F,GAAG,CAACsG,MAAM,CAACH,KAAK,EAAEC,KAAK,CAAC;QACxB,OACCC,OAAO,GAAGjG,IAAI,CAACO,KAAK,IACpBP,IAAI,CAAC8E,QAAQ,CAACiB,KAAK,EAAEC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEd,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAC9C;UACDa,KAAK,IAAI,CAAC,GAAGb,CAAC,CAAC5B,KAAK;UACpB0C,KAAK,IAAI,CAAC,GAAGd,CAAC,CAAC3B,KAAK;UACpB0C,OAAO,EAAE;QACV;QACArG,GAAG,CAACuG,MAAM,CAACJ,KAAK,EAAEC,KAAK,CAAC;QACxBpG,GAAG,CAACkG,MAAM,CAAC,CAAC;MACb,CAAC,CAAC;MACF;MACAlG,GAAG,CAACiG,WAAW,GAAG7F,IAAI,CAACe,IAAI,CAACM,IAAI;MAChCrB,IAAI,CAAC6B,OAAO,CAACoD,OAAO,CAAEC,CAAC,IAAK;QAC3B,IAAIA,CAAC,CAACpE,KAAK,EAAE;UACZ,IAAIsF,KAAK,GACRlB,CAAC,CAACpC,CAAC,IACFoC,CAAC,CAAC5B,KAAK,GAAG,CAAC,GAAG,EAAE4B,CAAC,CAAC9B,MAAM,GAAG,CAAC,CAAC,GAAG8B,CAAC,CAAC5B,KAAK,GAAG,CAAC,GAAG4B,CAAC,CAAC9B,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;YAChEiD,KAAK,GACLnB,CAAC,CAACnC,CAAC,IACFmC,CAAC,CAAC3B,KAAK,GAAG,CAAC,GAAG,EAAE2B,CAAC,CAAC9B,MAAM,GAAG,CAAC,CAAC,GAAG8B,CAAC,CAAC3B,KAAK,GAAG,CAAC,GAAG2B,CAAC,CAAC9B,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;YAChE6C,OAAO,GAAG,CAAC;UACZ;UACArG,GAAG,CAAC2F,SAAS,GAAGvF,IAAI,CAACe,IAAI,CAACM,IAAI;UAC9BzB,GAAG,CAAC4F,SAAS,CAAC,CAAC;UACf5F,GAAG,CAAC6F,GAAG,CAACP,CAAC,CAACpC,CAAC,EAAEoC,CAAC,CAACnC,CAAC,EAAEmC,CAAC,CAAC9B,MAAM,EAAE8B,CAAC,CAAC1B,UAAU,GAAG0B,CAAC,CAAC/B,MAAM,EAAE,CAAC,GAAGlB,IAAI,CAACyD,EAAE,CAAC;UACjER,CAAC,CAAC7B,IAAI,GAAGzD,GAAG,CAAC+F,IAAI,CAAC,CAAC,GAAG/F,GAAG,CAACkG,MAAM,CAAC,CAAC;UAClC;UACAlG,GAAG,CAAC4F,SAAS,CAAC,CAAC;UACf5F,GAAG,CAAC6F,GAAG,CAACW,KAAK,EAAEC,KAAK,EAAEnB,CAAC,CAAC9B,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGnB,IAAI,CAACyD,EAAE,CAAC;UACnD9F,GAAG,CAAC2F,SAAS,GAAIL,CAAC,CAAC7B,IAAI,GAAGrD,IAAI,CAACe,IAAI,CAACK,MAAM,GAAGpB,IAAI,CAACe,IAAI,CAACM,IAAK;UAE5DzB,GAAG,CAAC+F,IAAI,CAAC,CAAC;UACV;UACA,IAAIT,CAAC,CAACzB,QAAQ,GAAG,CAAC,EAAE;YACnB7D,GAAG,CAAC0G,SAAS,GAAG,CAAC;YACjB1G,GAAG,CAAC4F,SAAS,CAAC,CAAC;YACf5F,GAAG,CAACsG,MAAM,CAACE,KAAK,EAAEC,KAAK,CAAC;YACxB,OACCJ,OAAO,GAAGjG,IAAI,CAACO,KAAK,IACpBP,IAAI,CAAC8E,QAAQ,CAACsB,KAAK,EAAEC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEnB,CAAC,EAAEA,CAAC,CAACzB,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,EACzD;cACD2C,KAAK,IAAK,CAAC,GAAGlB,CAAC,CAAC5B,KAAM;cACtB+C,KAAK,IAAK,CAAC,GAAGnB,CAAC,CAAC3B,KAAM;cACtB0C,OAAO,EAAE;YACV;YACArG,GAAG,CAACuG,MAAM,CAACC,KAAK,EAAEC,KAAK,CAAC;YACxBzG,GAAG,CAACkG,MAAM,CAAC,CAAC;YACZZ,CAAC,CAACzB,QAAQ,IAAI,CAAC;UAChB;UACA,IAAIyB,CAAC,CAACzB,QAAQ,GAAG,CAAC,EACjByB,CAAC,CAACzB,QAAQ,GAAG,CAAC;QAChB;MACD,CAAC,CAAC;IACH,CAAC;IAEDzD,IAAI,CAACuG,WAAW,GAAG,MAAM;MACxB,IAAIvG,IAAI,CAACe,IAAI,CAACS,WAAW,GAAGxB,IAAI,CAACe,IAAI,CAACQ,WAAW,EAChDvB,IAAI,CAACe,IAAI,CAACS,WAAW,EAAE,CAAC,KACpB;QACJ,IAAI4D,KAAK,EAAEC,KAAK;QAChBrF,IAAI,CAACe,IAAI,CAACS,WAAW,GAAG,CAAC;QACzBxB,IAAI,CAAC2B,OAAO,CAACsD,OAAO,CAAEC,CAAC,IAAK;UAC3BE,KAAK,GAAGF,CAAC,CAACpC,CAAC,GAAG,CAAC,GAAGoC,CAAC,CAAC5B,KAAK;UACzB+B,KAAK,GAAGH,CAAC,CAACnC,CAAC,GAAG,CAAC,GAAGmC,CAAC,CAAC3B,KAAK;UACzB,IACCvD,IAAI,CAAC8E,QAAQ,CACZM,KAAK,GAAGF,CAAC,CAAC9B,MAAM,EAChBiC,KAAK,GAAGH,CAAC,CAAC9B,MAAM,EAChB8B,CAAC,CAAC9B,MAAM,GAAG,CAAC,EACZ8B,CAAC,CAAC9B,MAAM,GAAG,CAAC,EACZ8B,CAAC,EACD,KACD,CAAC,IAAI,CAAC,EACL;YACD,IAAIsB,SAAS,EAAEC,SAAS;YACxBD,SAAS,GAAG1E,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3B,OAAO,CAAC2E,SAAS,GAAG3E,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAKoD,CAAC,CAAC3B,KAAK,CAAC;YAChD2B,CAAC,CAAC5B,KAAK,GAAGkD,SAAS;YACnBtB,CAAC,CAAC3B,KAAK,GACN,CAACkD,SAAS,IAAI,CAACD,SAAS,GAAI1E,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAI2E,SAAS;UAClE,CAAC,MAAM;YACNvB,CAAC,CAACpC,CAAC,GAAGsC,KAAK;YACXF,CAAC,CAACnC,CAAC,GAAGsC,KAAK;UACZ;QACD,CAAC,CAAC;MACH;IACD,CAAC;IAEDrF,IAAI,CAAC0G,UAAU,GAAGC,IAAI,IAAI;MACzB,IAAIC,OAAO,GAAG,EAAE;QAACxB,KAAK;QAAEC,KAAK;QAAEwB,QAAQ;QAAEpE,CAAC;MAC1C,IAAIzC,IAAI,CAAC6B,OAAO,CAACe,MAAM,GAAG,CAAC,IAAI5C,IAAI,CAAC6B,OAAO,CAAC,CAAC,CAAC,CAACf,KAAK,KAAK6F,IAAI,IAAI,EAAE,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,IAAI,EAAE,CAAC,EAAE;QACjGlE,CAAC,GAAG,CAAC;QACL,IAAIkE,IAAI,IAAI,EAAE,EAAE;UACf3G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACgB,QAAQ,GAAG,CAAC;UAC5B;QACD;QACAzD,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACa,KAAK,GAAGqD,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,GAAGA,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC;QAC5D3G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACc,KAAK,GAAGoD,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,GAAGA,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC;MAC7D,CAAC,MACI,IAAI3G,IAAI,CAAC6B,OAAO,CAACe,MAAM,GAAG,CAAC,IAAI5C,IAAI,CAAC6B,OAAO,CAAC,CAAC,CAAC,CAACf,KAAK,KACpD6F,IAAI,IAAI,EAAE,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,IAAI,EAAE,CAAC,EAAE;QACzElE,CAAC,GAAG,CAAC;QACL,IAAIkE,IAAI,IAAI,EAAE,EAAE;UACf3G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACgB,QAAQ,GAAG,CAAC;UAC5B;QACD;QACAzD,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACa,KAAK,GAAGqD,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,GAAGA,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC;QAC5D3G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACc,KAAK,GAAGoD,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,GAAGA,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC;MAC7D,CAAC,MACI;MACLE,QAAQ,GAAG7G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACW,MAAM;MACjCgC,KAAK,GAAGpF,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACK,CAAC,GAAG8D,OAAO,GAAG5G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACa,KAAK;MAC3D+B,KAAK,GAAGrF,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACM,CAAC,GAAG6D,OAAO,GAAG5G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACc,KAAK;MAC3D,OACCqD,OAAO,IAAI,CAAC,IACZ5G,IAAI,CAAC8E,QAAQ,CACZM,KAAK,GAAGyB,QAAQ,EAChBxB,KAAK,GAAGwB,QAAQ,EAChBA,QAAQ,GAAG,CAAC,EACZA,QAAQ,GAAG,CAAC,EACZ7G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,EACf,KACD,CAAC,IAAI,CAAC,EACL;QACD2C,KAAK,GAAGpF,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACK,CAAC,GAAG8D,OAAO,GAAG5G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACa,KAAK;QAC3D+B,KAAK,GAAGrF,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACM,CAAC,GAAG6D,OAAO,GAAG5G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACc,KAAK;QAC3DqD,OAAO,IAAI,CAAC;MACb;MACA5G,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACK,CAAC,GAAGsC,KAAK;MACzBpF,IAAI,CAAC6B,OAAO,CAACY,CAAC,CAAC,CAACM,CAAC,GAAGsC,KAAK;IAC1B,CAAC;IAEDrF,IAAI,CAAC8G,YAAY,GAAG,MAAM;MACzB5G,KAAK,CAAC6G,WAAW,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAAC;QAC/CnG,KAAK,EAAEhB,UAAU;QACjBC,eAAe,EAAEA,eAAe;QAChC8B,OAAO,EAAEmF,IAAI,CAACC,SAAS,CAACjH,IAAI,CAAC6B,OAAO,CAAC;QACrCF,OAAO,EAAEqF,IAAI,CAACC,SAAS,CAACjH,IAAI,CAAC2B,OAAO,CAAC;QACrCC,KAAK,EAAEoF,IAAI,CAACC,SAAS,CAACjH,IAAI,CAAC4B,KAAK,CAAC;QACjCH,OAAO,EAAEuF,IAAI,CAACC,SAAS,CAACjH,IAAI,CAACyB,OAAO,CAAC;QACrCsC,GAAG,EAAEiD,IAAI,CAACC,SAAS,CAAC/G,KAAK,CAAC6D,GAAG;MAC9B,CAAC,CAAC,EAAE,OAAO,CAAC;IACb,CAAC;IAED/D,IAAI,CAACkH,KAAK,GAAG,MAAM;MAClBtH,GAAG,CAAC2F,SAAS,GAAGvF,IAAI,CAACe,IAAI,CAACG,MAAM;MAChC,IAAMgG,KAAK,GAAG,OAAO;MACrBtH,GAAG,CAACuH,QAAQ,CAACD,KAAK,EAAElH,IAAI,CAACO,KAAK,GAAC,CAAC,GAAG2G,KAAK,CAACtE,MAAM,EAAG5C,IAAI,CAACU,KAAK,GAAG,CAAC,CAAC;IAClE,CAAC;IAEDV,IAAI,CAACoH,GAAG,GAAG,MAAM;MAChBxH,GAAG,CAAC2F,SAAS,GAAGvF,IAAI,CAACe,IAAI,CAACG,MAAM;MAChC,IAAMmG,IAAI,GAAG,WAAW;QACvBC,MAAM,GAAGtH,IAAI,CAAC6B,OAAO,CAAC,CAAC,CAAC,CAACD,KAAK,GAAG5B,IAAI,CAAC6B,OAAO,CAAC,CAAC,CAAC,CAACD,KAAK,GAAG,UAAU,GAChE5B,IAAI,CAAC6B,OAAO,CAAC,CAAC,CAAC,CAACD,KAAK,GAAG5B,IAAI,CAAC6B,OAAO,CAAC,CAAC,CAAC,CAACD,KAAK,GAAG,UAAU,GAAG,QAAS;MAC1E0F,MAAM,IAAI,MAAM;MAChB1H,GAAG,CAACuH,QAAQ,CAACE,IAAI,EAAErH,IAAI,CAACO,KAAK,GAAC,CAAC,GAAI8G,IAAI,CAACzE,MAAM,GAAC,CAAC,GAAE,EAAE,EAAE5C,IAAI,CAACU,KAAK,GAAC,CAAC,CAAC;MACnEd,GAAG,CAACuH,QAAQ,CAACG,MAAM,EAAEtH,IAAI,CAACO,KAAK,GAAC,CAAC,GAAI+G,MAAM,CAAC1E,MAAM,GAAC,CAAC,GAAE,EAAE,EAAG5C,IAAI,CAACU,KAAK,GAAC,CAAC,GAAI,EAAE,CAAC;MAE9E6G,UAAU,CAAC,MAAM;QAChBvH,IAAI,CAACyB,OAAO,GAAG,IAAIC,KAAK,CAAC,CAAC;QAC1B1B,IAAI,CAAC2B,OAAO,GAAG,IAAID,KAAK,CAAC,CAAC;QAC1B1B,IAAI,CAAC4B,KAAK,GAAG,IAAIF,KAAK,CAAC,CAAC;QACxB1B,IAAI,CAAC6B,OAAO,GAAG,IAAIH,KAAK,CAAC,CAAC;QAC1B5B,UAAU,GAAG,CAAC,CAAC;QACfI,KAAK,CAACgE,QAAQ,CAACpE,UAAU,CAAC;QAC1BI,KAAK,CAACsH,MAAM,CAAC,CAAC;MACf,CAAC,EAAE,IAAI,CAAC;IACT,CAAC;IAED5G,MAAM,CAAC6G,QAAQ,GAAGpF,CAAC,IAAI;MACtBrC,IAAI,CAACO,KAAK,GAAGZ,MAAM,CAACa,KAAK,GAAGX,OAAO,CAACY,WAAW;MAC/CT,IAAI,CAACU,KAAK,GAAGf,MAAM,CAACgB,MAAM,GAAGC,MAAM,CAACC,WAAW,GAAG,CAAC;MACnDlB,MAAM,CAAC4E,KAAK,CAAC/D,KAAK,GAAGR,IAAI,CAACO,KAAK,GAAG,IAAI;MACtCZ,MAAM,CAAC4E,KAAK,CAAC5D,MAAM,GAAGX,IAAI,CAACU,KAAK,GAAG,IAAI;MACvCV,IAAI,CAACe,IAAI,CAACC,IAAI,GAAGhB,IAAI,CAACU,KAAK,GAAG,EAAE;MAChCV,IAAI,CAACe,IAAI,CAACE,IAAI,GAAGjB,IAAI,CAACU,KAAK,GAAG,EAAE;IACjC,CAAC;IAEDV,IAAI,CAAC0H,IAAI,GAAG,MAAM;MACjB9H,GAAG,CAAC+H,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE3H,IAAI,CAACO,KAAK,EAAEP,IAAI,CAACU,KAAK,CAAC;MAC3Cd,GAAG,CAACgI,IAAI,GAAG,gBAAgB;MAC3BhI,GAAG,CAAC0G,SAAS,GAAG,GAAG;MAEnB,QAAQxG,UAAU;QACjB,KAAK,CAAC;UACLE,IAAI,CAACoC,QAAQ,CAAC,CAAC;UACfxB,MAAM,CAACiH,SAAS,GAAI3C,CAAC,IAAKlF,IAAI,CAAC0G,UAAU,CAACxB,CAAC,CAAC4C,OAAO,CAAC;UACpDhI,UAAU,GAAG,CAAC;UACdI,KAAK,CAACgE,QAAQ,CAACpE,UAAU,CAAC;UAC1B;QACD,KAAK,CAAC;UACLE,IAAI,CAACkH,KAAK,CAAC,CAAC;UACZ;QACD,KAAK,CAAC;UACLlH,IAAI,CAACoH,GAAG,CAAC,CAAC;UACV;QACD,KAAK,CAAC,CAAC;UACN;QACD;UACCpH,IAAI,CAACuG,WAAW,CAAC,CAAC;UAClBvG,IAAI,CAAC8G,YAAY,CAAC,CAAC;UACnB9G,IAAI,CAACsF,QAAQ,CAAC,CAAC;MACjB;MACAyC,qBAAqB,CAAC/H,IAAI,CAAC0H,IAAI,CAAC;IACjC,CAAC;IACDK,qBAAqB,CAAC/H,IAAI,CAAC0H,IAAI,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EACN5H,UAAU,GAAGI,KAAK,CAACY,KAAK;EACxBf,eAAe,GAAGG,KAAK,CAAC2B,OAAO;EAC/B,oBAAOnC,OAAA;IAAQsI,EAAE,EAAC,QAAQ;IAACC,SAAS,EAAC,KAAK;IAAAzD,QAAA,EAAE;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACxE,CAAC;AAACzE,EAAA,CAjfEF,IAAI;AAAAiI,EAAA,GAAJjI,IAAI;AAmfR,eAAeA,IAAI;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}